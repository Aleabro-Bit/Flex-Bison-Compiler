State 1 conflicts: 1 shift/reduce
State 7 conflicts: 1 shift/reduce
State 10 conflicts: 2 shift/reduce
State 11 conflicts: 2 shift/reduce
State 19 conflicts: 2 shift/reduce
State 20 conflicts: 1 shift/reduce
State 34 conflicts: 1 reduce/reduce
State 37 conflicts: 1 shift/reduce
State 38 conflicts: 1 shift/reduce
State 39 conflicts: 1 shift/reduce
State 46 conflicts: 1 shift/reduce
State 48 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce, 1 reduce/reduce
State 56 conflicts: 2 shift/reduce
State 57 conflicts: 2 shift/reduce
State 58 conflicts: 2 shift/reduce
State 59 conflicts: 2 shift/reduce
State 60 conflicts: 2 shift/reduce
State 63 conflicts: 1 shift/reduce
State 64 conflicts: 1 shift/reduce
State 73 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 86 conflicts: 1 shift/reduce
State 87 conflicts: 2 shift/reduce
State 89 conflicts: 1 shift/reduce
State 90 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce
State 105 conflicts: 2 shift/reduce
State 106 conflicts: 2 shift/reduce
State 107 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce
State 116 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 120 conflicts: 1 shift/reduce
State 131 conflicts: 1 shift/reduce
State 132 conflicts: 1 shift/reduce


Grammar

    0 $accept: START $end

    1 START: ε
    2      | START statements EOL
    3      | START ufunction EOL
    4      | START error EOL
    5      | START EOL

    6 statements: statement ';' statements
    7           | statement ';'

    8 statement: declare
    9          | assignment
   10          | funcall
   11          | return
   12          | flow
   13          | expression

   14 flow: whether
   15     | when
   16     | from

   17 declare: DATA_TYPE ID init

   18 init: ASSIGN expression
   19     | ε

   20 assignment: ID ASSIGN expression

   21 whether: WHETHER '[' condition ']' THEN ':' statements
   22        | WHETHER '[' condition ']' THEN ':' statements OTHERWISE ':' statements

   23 when: WHEN '[' condition ']' '{' statements '}'
   24     | WHEN '{' statements '}' UNTIL '[' condition ']'

   25 from: FROM '[' declare TO expression STEP expression ']' '{' statements '}'

   26 condition: expression CMP expression
   27          | condition AND condition
   28          | condition OR condition
   29          | NOT condition
   30          | '(' condition ')'
   31          | expression

   32 expression: expression PLUS expression
   33           | expression MINUS expression
   34           | expression MUL expression
   35           | expression DIV expression
   36           | expression POW expression
   37           | ABS expression ABS
   38           | MINUS expression
   39           | '(' expression ')'
   40           | value
   41           | funcall

   42 value: ε
   43      | NUM
   44      | BINARY
   45      | ROMAN
   46      | ID
   47      | STR
   48      | list

   49 list: '[' ']'
   50     | '[' explist ']'

   51 explist: expression
   52        | expression ',' explist

   53 symlist: ID
   54        | ID ',' symlist

   55 return: RETURN expression ';'

   56 ufunction: DEFINE ID '(' symlist ')' '{' statements '}'
   57          | DEFINE ID '(' ')' '{' statements '}'

   58 funcall: ID '(' explist ')'
   59        | FUNC '(' explist ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 30 39 56 57 58 59
    ')' (41) 30 39 56 57 58 59
    ',' (44) 52 54
    ':' (58) 21 22
    ';' (59) 6 7 55
    '[' (91) 21 22 23 24 25 49 50
    ']' (93) 21 22 23 24 25 49 50
    '{' (123) 23 24 25 56 57
    '}' (125) 23 24 25 56 57
    error (256) 4
    STEP (258) 25
    TO (259) 25
    FROM (260) 25
    WHEN (261) 23 24
    OTHERWISE (262) 22
    WHETHER (263) 21 22
    RETURN (264) 55
    DEFINE (265) 56 57
    UNTIL (266) 24
    EOL (267) 2 3 4 5
    THEN (268) 21 22
    AND (269) 27
    OR (270) 28
    NOT (271) 29
    PLUS <op> (272) 32
    MINUS <op> (273) 33 38
    MUL <op> (274) 34
    DIV <op> (275) 35
    POW <op> (276) 36
    ASSIGN <op> (277) 18 20
    ABS <op> (278) 37
    NUM <num> (279) 43
    BINARY <num> (280) 44
    ROMAN <num> (281) 45
    STR <st> (282) 47
    FUNC <fn> (283) 59
    DATA_TYPE <dt> (284) 17
    ID <s> (285) 17 20 46 53 54 56 57 58
    CMP <fn> (286) 26
    UMINUS (287)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    START <a> (43)
        on left: 1 2 3 4 5
        on right: 0 2 3 4 5
    statements <a> (44)
        on left: 6 7
        on right: 2 6 21 22 23 24 25 56 57
    statement <a> (45)
        on left: 8 9 10 11 12 13
        on right: 6 7
    flow <a> (46)
        on left: 14 15 16
        on right: 12
    declare <a> (47)
        on left: 17
        on right: 8 25
    init <a> (48)
        on left: 18 19
        on right: 17
    assignment <a> (49)
        on left: 20
        on right: 9
    whether <a> (50)
        on left: 21 22
        on right: 14
    when <a> (51)
        on left: 23 24
        on right: 15
    from <a> (52)
        on left: 25
        on right: 16
    condition <a> (53)
        on left: 26 27 28 29 30 31
        on right: 21 22 23 24 27 28 29 30
    expression <a> (54)
        on left: 32 33 34 35 36 37 38 39 40 41
        on right: 13 18 20 25 26 31 32 33 34 35 36 37 38 39 51 52 55
    value <a> (55)
        on left: 42 43 44 45 46 47 48
        on right: 40
    list <a> (56)
        on left: 49 50
        on right: 48
    explist <a> (57)
        on left: 51 52
        on right: 50 52 58 59
    symlist <sl> (58)
        on left: 53 54
        on right: 54 56
    return <a> (59)
        on left: 55
        on right: 11
    ufunction <a> (60)
        on left: 56 57
        on right: 3
    funcall <a> (61)
        on left: 58 59
        on right: 10 41


State 0

    0 $accept: • START $end

    $default  reduce using rule 1 (START)

    START  go to state 1


State 1

    0 $accept: START • $end
    2 START: START • statements EOL
    3      | START • ufunction EOL
    4      | START • error EOL
    5      | START • EOL

    $end       shift, and go to state 2
    error      shift, and go to state 3
    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    DEFINE     shift, and go to state 8
    EOL        shift, and go to state 9
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '['        shift, and go to state 19
    '('        shift, and go to state 20

    PLUS   reduce using rule 42 (value)
    MINUS  [reduce using rule 42 (value)]
    MUL    reduce using rule 42 (value)
    DIV    reduce using rule 42 (value)
    POW    reduce using rule 42 (value)
    ';'    reduce using rule 42 (value)

    statements  go to state 21
    statement   go to state 22
    flow        go to state 23
    declare     go to state 24
    assignment  go to state 25
    whether     go to state 26
    when        go to state 27
    from        go to state 28
    expression  go to state 29
    value       go to state 30
    list        go to state 31
    return      go to state 32
    ufunction   go to state 33
    funcall     go to state 34


State 2

    0 $accept: START $end •

    $default  accept


State 3

    4 START: START error • EOL

    EOL  shift, and go to state 35


State 4

   25 from: FROM • '[' declare TO expression STEP expression ']' '{' statements '}'

    '['  shift, and go to state 36


State 5

   23 when: WHEN • '[' condition ']' '{' statements '}'
   24     | WHEN • '{' statements '}' UNTIL '[' condition ']'

    '['  shift, and go to state 37
    '{'  shift, and go to state 38


State 6

   21 whether: WHETHER • '[' condition ']' THEN ':' statements
   22        | WHETHER • '[' condition ']' THEN ':' statements OTHERWISE ':' statements

    '['  shift, and go to state 39


State 7

   55 return: RETURN • expression ';'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 41
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 8

   56 ufunction: DEFINE • ID '(' symlist ')' '{' statements '}'
   57          | DEFINE • ID '(' ')' '{' statements '}'

    ID  shift, and go to state 43


State 9

    5 START: START EOL •

    $default  reduce using rule 5 (START)


State 10

   38 expression: MINUS • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    ABS       [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 44
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 11

   37 expression: ABS • expression ABS

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    ABS       [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 45
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 12

   43 value: NUM •

    $default  reduce using rule 43 (value)


State 13

   44 value: BINARY •

    $default  reduce using rule 44 (value)


State 14

   45 value: ROMAN •

    $default  reduce using rule 45 (value)


State 15

   47 value: STR •

    $default  reduce using rule 47 (value)


State 16

   59 funcall: FUNC • '(' explist ')'

    '('  shift, and go to state 46


State 17

   17 declare: DATA_TYPE • ID init

    ID  shift, and go to state 47


State 18

   20 assignment: ID • ASSIGN expression
   46 value: ID •
   58 funcall: ID • '(' explist ')'

    ASSIGN  shift, and go to state 48
    '('     shift, and go to state 49

    $default  reduce using rule 46 (value)


State 19

   49 list: '[' • ']'
   50     | '[' • explist ']'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    ']'     shift, and go to state 50
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    ']'       [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 51
    value       go to state 30
    list        go to state 31
    explist     go to state 52
    funcall     go to state 42


State 20

   39 expression: '(' • expression ')'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 53
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 21

    2 START: START statements • EOL

    EOL  shift, and go to state 54


State 22

    6 statements: statement • ';' statements
    7           | statement • ';'

    ';'  shift, and go to state 55


State 23

   12 statement: flow •

    $default  reduce using rule 12 (statement)


State 24

    8 statement: declare •

    $default  reduce using rule 8 (statement)


State 25

    9 statement: assignment •

    $default  reduce using rule 9 (statement)


State 26

   14 flow: whether •

    $default  reduce using rule 14 (flow)


State 27

   15 flow: when •

    $default  reduce using rule 15 (flow)


State 28

   16 flow: from •

    $default  reduce using rule 16 (flow)


State 29

   13 statement: expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    MUL    shift, and go to state 58
    DIV    shift, and go to state 59
    POW    shift, and go to state 60

    $default  reduce using rule 13 (statement)


State 30

   40 expression: value •

    $default  reduce using rule 40 (expression)


State 31

   48 value: list •

    $default  reduce using rule 48 (value)


State 32

   11 statement: return •

    $default  reduce using rule 11 (statement)


State 33

    3 START: START ufunction • EOL

    EOL  shift, and go to state 61


State 34

   10 statement: funcall •
   41 expression: funcall •

    ';'       reduce using rule 10 (statement)
    ';'       [reduce using rule 41 (expression)]
    $default  reduce using rule 41 (expression)


State 35

    4 START: START error EOL •

    $default  reduce using rule 4 (START)


State 36

   25 from: FROM '[' • declare TO expression STEP expression ']' '{' statements '}'

    DATA_TYPE  shift, and go to state 17

    declare  go to state 62


State 37

   23 when: WHEN '[' • condition ']' '{' statements '}'

    NOT     shift, and go to state 63
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 64

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    condition   go to state 65
    expression  go to state 66
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 38

   24 when: WHEN '{' • statements '}' UNTIL '[' condition ']'

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '['        shift, and go to state 19
    '('        shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    statements  go to state 67
    statement   go to state 22
    flow        go to state 23
    declare     go to state 24
    assignment  go to state 25
    whether     go to state 26
    when        go to state 27
    from        go to state 28
    expression  go to state 29
    value       go to state 30
    list        go to state 31
    return      go to state 32
    funcall     go to state 34


State 39

   21 whether: WHETHER '[' • condition ']' THEN ':' statements
   22        | WHETHER '[' • condition ']' THEN ':' statements OTHERWISE ':' statements

    NOT     shift, and go to state 63
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 64

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    condition   go to state 68
    expression  go to state 66
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 40

   46 value: ID •
   58 funcall: ID • '(' explist ')'

    '('  shift, and go to state 49

    $default  reduce using rule 46 (value)


State 41

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   55 return: RETURN expression • ';'

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    MUL    shift, and go to state 58
    DIV    shift, and go to state 59
    POW    shift, and go to state 60
    ';'    shift, and go to state 69


State 42

   41 expression: funcall •

    $default  reduce using rule 41 (expression)


State 43

   56 ufunction: DEFINE ID • '(' symlist ')' '{' statements '}'
   57          | DEFINE ID • '(' ')' '{' statements '}'

    '('  shift, and go to state 70


State 44

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   38           | MINUS expression •

    $default  reduce using rule 38 (expression)


State 45

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   37           | ABS expression • ABS

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    MUL    shift, and go to state 58
    DIV    shift, and go to state 59
    POW    shift, and go to state 60
    ABS    shift, and go to state 71


State 46

   59 funcall: FUNC '(' • explist ')'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 51
    value       go to state 30
    list        go to state 31
    explist     go to state 72
    funcall     go to state 42


State 47

   17 declare: DATA_TYPE ID • init

    ASSIGN  shift, and go to state 73

    $default  reduce using rule 19 (init)

    init  go to state 74


State 48

   20 assignment: ID ASSIGN • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 75
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 49

   58 funcall: ID '(' • explist ')'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 51
    value       go to state 30
    list        go to state 31
    explist     go to state 76
    funcall     go to state 42


State 50

   49 list: '[' ']' •

    $default  reduce using rule 49 (list)


State 51

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   51 explist: expression •
   52        | expression • ',' explist

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    MUL    shift, and go to state 58
    DIV    shift, and go to state 59
    POW    shift, and go to state 60
    ','    shift, and go to state 77

    $default  reduce using rule 51 (explist)


State 52

   50 list: '[' explist • ']'

    ']'  shift, and go to state 78


State 53

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   39           | '(' expression • ')'

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    MUL    shift, and go to state 58
    DIV    shift, and go to state 59
    POW    shift, and go to state 60
    ')'    shift, and go to state 79


State 54

    2 START: START statements EOL •

    $default  reduce using rule 2 (START)


State 55

    6 statements: statement ';' • statements
    7           | statement ';' •

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '['        shift, and go to state 19
    '('        shift, and go to state 20

    PLUS      reduce using rule 42 (value)
    MINUS     [reduce using rule 42 (value)]
    MUL       reduce using rule 42 (value)
    DIV       reduce using rule 42 (value)
    POW       reduce using rule 42 (value)
    ';'       reduce using rule 7 (statements)
    ';'       [reduce using rule 42 (value)]
    $default  reduce using rule 7 (statements)

    statements  go to state 80
    statement   go to state 22
    flow        go to state 23
    declare     go to state 24
    assignment  go to state 25
    whether     go to state 26
    when        go to state 27
    from        go to state 28
    expression  go to state 29
    value       go to state 30
    list        go to state 31
    return      go to state 32
    funcall     go to state 34


State 56

   32 expression: expression PLUS • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    ABS       [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 81
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 57

   33 expression: expression MINUS • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    ABS       [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 82
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 58

   34 expression: expression MUL • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    ABS       [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 83
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 59

   35 expression: expression DIV • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    ABS       [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 84
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 60

   36 expression: expression POW • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    ABS       [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 85
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 61

    3 START: START ufunction EOL •

    $default  reduce using rule 3 (START)


State 62

   25 from: FROM '[' declare • TO expression STEP expression ']' '{' statements '}'

    TO  shift, and go to state 86


State 63

   29 condition: NOT • condition

    NOT     shift, and go to state 63
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 64

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    condition   go to state 87
    expression  go to state 66
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 64

   30 condition: '(' • condition ')'
   39 expression: '(' • expression ')'

    NOT     shift, and go to state 63
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 64

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    condition   go to state 88
    expression  go to state 89
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 65

   23 when: WHEN '[' condition • ']' '{' statements '}'
   27 condition: condition • AND condition
   28          | condition • OR condition

    AND  shift, and go to state 90
    OR   shift, and go to state 91
    ']'  shift, and go to state 92


State 66

   26 condition: expression • CMP expression
   31          | expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    MUL    shift, and go to state 58
    DIV    shift, and go to state 59
    POW    shift, and go to state 60
    CMP    shift, and go to state 93

    $default  reduce using rule 31 (condition)


State 67

   24 when: WHEN '{' statements • '}' UNTIL '[' condition ']'

    '}'  shift, and go to state 94


State 68

   21 whether: WHETHER '[' condition • ']' THEN ':' statements
   22        | WHETHER '[' condition • ']' THEN ':' statements OTHERWISE ':' statements
   27 condition: condition • AND condition
   28          | condition • OR condition

    AND  shift, and go to state 90
    OR   shift, and go to state 91
    ']'  shift, and go to state 95


State 69

   55 return: RETURN expression ';' •

    $default  reduce using rule 55 (return)


State 70

   56 ufunction: DEFINE ID '(' • symlist ')' '{' statements '}'
   57          | DEFINE ID '(' • ')' '{' statements '}'

    ID   shift, and go to state 96
    ')'  shift, and go to state 97

    symlist  go to state 98


State 71

   37 expression: ABS expression ABS •

    $default  reduce using rule 37 (expression)


State 72

   59 funcall: FUNC '(' explist • ')'

    ')'  shift, and go to state 99


State 73

   18 init: ASSIGN • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 100
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 74

   17 declare: DATA_TYPE ID init •

    $default  reduce using rule 17 (declare)


State 75

   20 assignment: ID ASSIGN expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    MUL    shift, and go to state 58
    DIV    shift, and go to state 59
    POW    shift, and go to state 60

    $default  reduce using rule 20 (assignment)


State 76

   58 funcall: ID '(' explist • ')'

    ')'  shift, and go to state 101


State 77

   52 explist: expression ',' • explist

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 51
    value       go to state 30
    list        go to state 31
    explist     go to state 102
    funcall     go to state 42


State 78

   50 list: '[' explist ']' •

    $default  reduce using rule 50 (list)


State 79

   39 expression: '(' expression ')' •

    $default  reduce using rule 39 (expression)


State 80

    6 statements: statement ';' statements •

    $default  reduce using rule 6 (statements)


State 81

   32 expression: expression • PLUS expression
   32           | expression PLUS expression •
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    MUL  shift, and go to state 58
    DIV  shift, and go to state 59

    $default  reduce using rule 32 (expression)


State 82

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   33           | expression MINUS expression •
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    MUL  shift, and go to state 58
    DIV  shift, and go to state 59

    $default  reduce using rule 33 (expression)


State 83

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   34           | expression MUL expression •
   35           | expression • DIV expression
   36           | expression • POW expression

    $default  reduce using rule 34 (expression)


State 84

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   35           | expression DIV expression •
   36           | expression • POW expression

    $default  reduce using rule 35 (expression)


State 85

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   36           | expression POW expression •

    MUL  shift, and go to state 58
    DIV  shift, and go to state 59

    $default  reduce using rule 36 (expression)


State 86

   25 from: FROM '[' declare TO • expression STEP expression ']' '{' statements '}'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 103
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 87

   27 condition: condition • AND condition
   28          | condition • OR condition
   29          | NOT condition •

    AND  shift, and go to state 90
    OR   shift, and go to state 91

    AND       [reduce using rule 29 (condition)]
    OR        [reduce using rule 29 (condition)]
    $default  reduce using rule 29 (condition)


State 88

   27 condition: condition • AND condition
   28          | condition • OR condition
   30          | '(' condition • ')'

    AND  shift, and go to state 90
    OR   shift, and go to state 91
    ')'  shift, and go to state 104


State 89

   26 condition: expression • CMP expression
   31          | expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   39           | '(' expression • ')'

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    MUL    shift, and go to state 58
    DIV    shift, and go to state 59
    POW    shift, and go to state 60
    CMP    shift, and go to state 93
    ')'    shift, and go to state 79

    ')'       [reduce using rule 31 (condition)]
    $default  reduce using rule 31 (condition)


State 90

   27 condition: condition AND • condition

    NOT     shift, and go to state 63
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 64

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    condition   go to state 105
    expression  go to state 66
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 91

   28 condition: condition OR • condition

    NOT     shift, and go to state 63
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 64

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    condition   go to state 106
    expression  go to state 66
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 92

   23 when: WHEN '[' condition ']' • '{' statements '}'

    '{'  shift, and go to state 107


State 93

   26 condition: expression CMP • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 108
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 94

   24 when: WHEN '{' statements '}' • UNTIL '[' condition ']'

    UNTIL  shift, and go to state 109


State 95

   21 whether: WHETHER '[' condition ']' • THEN ':' statements
   22        | WHETHER '[' condition ']' • THEN ':' statements OTHERWISE ':' statements

    THEN  shift, and go to state 110


State 96

   53 symlist: ID •
   54        | ID • ',' symlist

    ','  shift, and go to state 111

    $default  reduce using rule 53 (symlist)


State 97

   57 ufunction: DEFINE ID '(' ')' • '{' statements '}'

    '{'  shift, and go to state 112


State 98

   56 ufunction: DEFINE ID '(' symlist • ')' '{' statements '}'

    ')'  shift, and go to state 113


State 99

   59 funcall: FUNC '(' explist ')' •

    $default  reduce using rule 59 (funcall)


State 100

   18 init: ASSIGN expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    MUL    shift, and go to state 58
    DIV    shift, and go to state 59
    POW    shift, and go to state 60

    $default  reduce using rule 18 (init)


State 101

   58 funcall: ID '(' explist ')' •

    $default  reduce using rule 58 (funcall)


State 102

   52 explist: expression ',' explist •

    $default  reduce using rule 52 (explist)


State 103

   25 from: FROM '[' declare TO expression • STEP expression ']' '{' statements '}'
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    STEP   shift, and go to state 114
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    MUL    shift, and go to state 58
    DIV    shift, and go to state 59
    POW    shift, and go to state 60


State 104

   30 condition: '(' condition ')' •

    $default  reduce using rule 30 (condition)


State 105

   27 condition: condition • AND condition
   27          | condition AND condition •
   28          | condition • OR condition

    AND  shift, and go to state 90
    OR   shift, and go to state 91

    AND       [reduce using rule 27 (condition)]
    OR        [reduce using rule 27 (condition)]
    $default  reduce using rule 27 (condition)


State 106

   27 condition: condition • AND condition
   28          | condition • OR condition
   28          | condition OR condition •

    AND  shift, and go to state 90
    OR   shift, and go to state 91

    AND       [reduce using rule 28 (condition)]
    OR        [reduce using rule 28 (condition)]
    $default  reduce using rule 28 (condition)


State 107

   23 when: WHEN '[' condition ']' '{' • statements '}'

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '['        shift, and go to state 19
    '('        shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    statements  go to state 115
    statement   go to state 22
    flow        go to state 23
    declare     go to state 24
    assignment  go to state 25
    whether     go to state 26
    when        go to state 27
    from        go to state 28
    expression  go to state 29
    value       go to state 30
    list        go to state 31
    return      go to state 32
    funcall     go to state 34


State 108

   26 condition: expression CMP expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    MUL    shift, and go to state 58
    DIV    shift, and go to state 59
    POW    shift, and go to state 60

    $default  reduce using rule 26 (condition)


State 109

   24 when: WHEN '{' statements '}' UNTIL • '[' condition ']'

    '['  shift, and go to state 116


State 110

   21 whether: WHETHER '[' condition ']' THEN • ':' statements
   22        | WHETHER '[' condition ']' THEN • ':' statements OTHERWISE ':' statements

    ':'  shift, and go to state 117


State 111

   54 symlist: ID ',' • symlist

    ID  shift, and go to state 96

    symlist  go to state 118


State 112

   57 ufunction: DEFINE ID '(' ')' '{' • statements '}'

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '['        shift, and go to state 19
    '('        shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    statements  go to state 119
    statement   go to state 22
    flow        go to state 23
    declare     go to state 24
    assignment  go to state 25
    whether     go to state 26
    when        go to state 27
    from        go to state 28
    expression  go to state 29
    value       go to state 30
    list        go to state 31
    return      go to state 32
    funcall     go to state 34


State 113

   56 ufunction: DEFINE ID '(' symlist ')' • '{' statements '}'

    '{'  shift, and go to state 120


State 114

   25 from: FROM '[' declare TO expression STEP • expression ']' '{' statements '}'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    expression  go to state 121
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 115

   23 when: WHEN '[' condition ']' '{' statements • '}'

    '}'  shift, and go to state 122


State 116

   24 when: WHEN '{' statements '}' UNTIL '[' • condition ']'

    NOT     shift, and go to state 63
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 40
    '['     shift, and go to state 19
    '('     shift, and go to state 64

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    condition   go to state 123
    expression  go to state 66
    value       go to state 30
    list        go to state 31
    funcall     go to state 42


State 117

   21 whether: WHETHER '[' condition ']' THEN ':' • statements
   22        | WHETHER '[' condition ']' THEN ':' • statements OTHERWISE ':' statements

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '['        shift, and go to state 19
    '('        shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    statements  go to state 124
    statement   go to state 22
    flow        go to state 23
    declare     go to state 24
    assignment  go to state 25
    whether     go to state 26
    when        go to state 27
    from        go to state 28
    expression  go to state 29
    value       go to state 30
    list        go to state 31
    return      go to state 32
    funcall     go to state 34


State 118

   54 symlist: ID ',' symlist •

    $default  reduce using rule 54 (symlist)


State 119

   57 ufunction: DEFINE ID '(' ')' '{' statements • '}'

    '}'  shift, and go to state 125


State 120

   56 ufunction: DEFINE ID '(' symlist ')' '{' • statements '}'

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '['        shift, and go to state 19
    '('        shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    statements  go to state 126
    statement   go to state 22
    flow        go to state 23
    declare     go to state 24
    assignment  go to state 25
    whether     go to state 26
    when        go to state 27
    from        go to state 28
    expression  go to state 29
    value       go to state 30
    list        go to state 31
    return      go to state 32
    funcall     go to state 34


State 121

   25 from: FROM '[' declare TO expression STEP expression • ']' '{' statements '}'
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    MUL    shift, and go to state 58
    DIV    shift, and go to state 59
    POW    shift, and go to state 60
    ']'    shift, and go to state 127


State 122

   23 when: WHEN '[' condition ']' '{' statements '}' •

    $default  reduce using rule 23 (when)


State 123

   24 when: WHEN '{' statements '}' UNTIL '[' condition • ']'
   27 condition: condition • AND condition
   28          | condition • OR condition

    AND  shift, and go to state 90
    OR   shift, and go to state 91
    ']'  shift, and go to state 128


State 124

   21 whether: WHETHER '[' condition ']' THEN ':' statements •
   22        | WHETHER '[' condition ']' THEN ':' statements • OTHERWISE ':' statements

    OTHERWISE  shift, and go to state 129

    $default  reduce using rule 21 (whether)


State 125

   57 ufunction: DEFINE ID '(' ')' '{' statements '}' •

    $default  reduce using rule 57 (ufunction)


State 126

   56 ufunction: DEFINE ID '(' symlist ')' '{' statements • '}'

    '}'  shift, and go to state 130


State 127

   25 from: FROM '[' declare TO expression STEP expression ']' • '{' statements '}'

    '{'  shift, and go to state 131


State 128

   24 when: WHEN '{' statements '}' UNTIL '[' condition ']' •

    $default  reduce using rule 24 (when)


State 129

   22 whether: WHETHER '[' condition ']' THEN ':' statements OTHERWISE • ':' statements

    ':'  shift, and go to state 132


State 130

   56 ufunction: DEFINE ID '(' symlist ')' '{' statements '}' •

    $default  reduce using rule 56 (ufunction)


State 131

   25 from: FROM '[' declare TO expression STEP expression ']' '{' • statements '}'

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '['        shift, and go to state 19
    '('        shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    statements  go to state 133
    statement   go to state 22
    flow        go to state 23
    declare     go to state 24
    assignment  go to state 25
    whether     go to state 26
    when        go to state 27
    from        go to state 28
    expression  go to state 29
    value       go to state 30
    list        go to state 31
    return      go to state 32
    funcall     go to state 34


State 132

   22 whether: WHETHER '[' condition ']' THEN ':' statements OTHERWISE ':' • statements

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '['        shift, and go to state 19
    '('        shift, and go to state 20

    MINUS     [reduce using rule 42 (value)]
    $default  reduce using rule 42 (value)

    statements  go to state 134
    statement   go to state 22
    flow        go to state 23
    declare     go to state 24
    assignment  go to state 25
    whether     go to state 26
    when        go to state 27
    from        go to state 28
    expression  go to state 29
    value       go to state 30
    list        go to state 31
    return      go to state 32
    funcall     go to state 34


State 133

   25 from: FROM '[' declare TO expression STEP expression ']' '{' statements • '}'

    '}'  shift, and go to state 135


State 134

   22 whether: WHETHER '[' condition ']' THEN ':' statements OTHERWISE ':' statements •

    $default  reduce using rule 22 (whether)


State 135

   25 from: FROM '[' declare TO expression STEP expression ']' '{' statements '}' •

    $default  reduce using rule 25 (from)

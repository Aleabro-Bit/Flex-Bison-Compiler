Terminals unused in grammar

    BOOLEAN


State 32 conflicts: 1 reduce/reduce
State 81 conflicts: 2 shift/reduce
State 83 conflicts: 1 shift/reduce
State 98 conflicts: 2 shift/reduce
State 99 conflicts: 2 shift/reduce


Grammar

    0 $accept: START $end

    1 START: ε
    2      | START statements EOL
    3      | START ufunction EOL
    4      | START error EOL
    5      | START EOL

    6 statements: statement ';' statements
    7           | statement ';'

    8 statement: declare
    9          | assignment
   10          | funcall
   11          | return
   12          | flow
   13          | expression

   14 flow: whether
   15     | when
   16     | from

   17 declare: DATA_TYPE ID init

   18 init: ASSIGN expression
   19     | ε

   20 assignment: ID ASSIGN expression

   21 whether: WHETHER '[' condition ']' THEN ':' statements
   22        | WHETHER '[' condition ']' THEN ':' statements OTHERWISE ':' statements

   23 when: WHEN '[' condition ']' '{' statements '}'
   24     | WHEN '{' statements '}' UNTIL '[' condition ']'

   25 from: FROM '[' declare TO expression STEP expression ']' '{' statements '}'

   26 condition: expression CMP expression
   27          | condition AND condition
   28          | condition OR condition
   29          | NOT condition
   30          | '(' condition ')'
   31          | expression

   32 expression: expression PLUS expression
   33           | expression MINUS expression
   34           | expression MUL expression
   35           | expression DIV expression
   36           | expression POW expression
   37           | ABS expression ABS
   38           | MINUS expression
   39           | '(' expression ')'
   40           | value
   41           | funcall

   42 value: NUM
   43      | BINARY
   44      | ROMAN
   45      | ID
   46      | STR

   47 explist: expression
   48        | expression ',' explist

   49 symlist: ID
   50        | ID ',' symlist

   51 return: RETURN expression ';'

   52 ufunction: DEFINE ID '(' symlist ')' '{' statements '}'

   53 funcall: ID '(' explist ')'
   54        | FUNC '(' explist ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 30 39 52 53 54
    ')' (41) 30 39 52 53 54
    ',' (44) 48 50
    ':' (58) 21 22
    ';' (59) 6 7 51
    '[' (91) 21 22 23 24 25
    ']' (93) 21 22 23 24 25
    '{' (123) 23 24 25 52
    '}' (125) 23 24 25 52
    error (256) 4
    STEP (258) 25
    TO (259) 25
    FROM (260) 25
    WHEN (261) 23 24
    OTHERWISE (262) 22
    WHETHER (263) 21 22
    RETURN (264) 51
    DEFINE (265) 52
    UNTIL (266) 24
    EOL (267) 2 3 4 5
    THEN (268) 21 22
    BOOLEAN (269)
    AND (270) 27
    OR (271) 28
    NOT (272) 29
    PLUS <op> (273) 32
    MINUS <op> (274) 33 38
    MUL <op> (275) 34
    DIV <op> (276) 35
    POW <op> (277) 36
    ASSIGN <op> (278) 18 20
    ABS <op> (279) 37
    NUM <num> (280) 42
    BINARY <num> (281) 43
    ROMAN <num> (282) 44
    STR <st> (283) 46
    FUNC <fn> (284) 54
    DATA_TYPE <dt> (285) 17
    ID <s> (286) 17 20 45 49 50 52 53
    CMP <fn> (287) 26
    UMINUS (288)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    START <a> (44)
        on left: 1 2 3 4 5
        on right: 0 2 3 4 5
    statements <a> (45)
        on left: 6 7
        on right: 2 6 21 22 23 24 25 52
    statement <a> (46)
        on left: 8 9 10 11 12 13
        on right: 6 7
    flow <a> (47)
        on left: 14 15 16
        on right: 12
    declare <a> (48)
        on left: 17
        on right: 8 25
    init <a> (49)
        on left: 18 19
        on right: 17
    assignment <a> (50)
        on left: 20
        on right: 9
    whether <a> (51)
        on left: 21 22
        on right: 14
    when <a> (52)
        on left: 23 24
        on right: 15
    from <a> (53)
        on left: 25
        on right: 16
    condition <a> (54)
        on left: 26 27 28 29 30 31
        on right: 21 22 23 24 27 28 29 30
    expression <a> (55)
        on left: 32 33 34 35 36 37 38 39 40 41
        on right: 13 18 20 25 26 31 32 33 34 35 36 37 38 39 47 48 51
    value <a> (56)
        on left: 42 43 44 45 46
        on right: 40
    explist <a> (57)
        on left: 47 48
        on right: 48 53 54
    symlist <sl> (58)
        on left: 49 50
        on right: 50 52
    return <a> (59)
        on left: 51
        on right: 11
    ufunction <a> (60)
        on left: 52
        on right: 3
    funcall <a> (61)
        on left: 53 54
        on right: 10 41


State 0

    0 $accept: • START $end

    $default  reduce using rule 1 (START)

    START  go to state 1


State 1

    0 $accept: START • $end
    2 START: START • statements EOL
    3      | START • ufunction EOL
    4      | START • error EOL
    5      | START • EOL

    $end       shift, and go to state 2
    error      shift, and go to state 3
    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    DEFINE     shift, and go to state 8
    EOL        shift, and go to state 9
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 20
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    ufunction   go to state 31
    funcall     go to state 32


State 2

    0 $accept: START $end •

    $default  accept


State 3

    4 START: START error • EOL

    EOL  shift, and go to state 33


State 4

   25 from: FROM • '[' declare TO expression STEP expression ']' '{' statements '}'

    '['  shift, and go to state 34


State 5

   23 when: WHEN • '[' condition ']' '{' statements '}'
   24     | WHEN • '{' statements '}' UNTIL '[' condition ']'

    '['  shift, and go to state 35
    '{'  shift, and go to state 36


State 6

   21 whether: WHETHER • '[' condition ']' THEN ':' statements
   22        | WHETHER • '[' condition ']' THEN ':' statements OTHERWISE ':' statements

    '['  shift, and go to state 37


State 7

   51 return: RETURN • expression ';'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 39
    value       go to state 29
    funcall     go to state 40


State 8

   52 ufunction: DEFINE • ID '(' symlist ')' '{' statements '}'

    ID  shift, and go to state 41


State 9

    5 START: START EOL •

    $default  reduce using rule 5 (START)


State 10

   38 expression: MINUS • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 42
    value       go to state 29
    funcall     go to state 40


State 11

   37 expression: ABS • expression ABS

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 43
    value       go to state 29
    funcall     go to state 40


State 12

   42 value: NUM •

    $default  reduce using rule 42 (value)


State 13

   43 value: BINARY •

    $default  reduce using rule 43 (value)


State 14

   44 value: ROMAN •

    $default  reduce using rule 44 (value)


State 15

   46 value: STR •

    $default  reduce using rule 46 (value)


State 16

   54 funcall: FUNC • '(' explist ')'

    '('  shift, and go to state 44


State 17

   17 declare: DATA_TYPE • ID init

    ID  shift, and go to state 45


State 18

   20 assignment: ID • ASSIGN expression
   45 value: ID •
   53 funcall: ID • '(' explist ')'

    ASSIGN  shift, and go to state 46
    '('     shift, and go to state 47

    $default  reduce using rule 45 (value)


State 19

   39 expression: '(' • expression ')'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 48
    value       go to state 29
    funcall     go to state 40


State 20

    2 START: START statements • EOL

    EOL  shift, and go to state 49


State 21

    6 statements: statement • ';' statements
    7           | statement • ';'

    ';'  shift, and go to state 50


State 22

   12 statement: flow •

    $default  reduce using rule 12 (statement)


State 23

    8 statement: declare •

    $default  reduce using rule 8 (statement)


State 24

    9 statement: assignment •

    $default  reduce using rule 9 (statement)


State 25

   14 flow: whether •

    $default  reduce using rule 14 (flow)


State 26

   15 flow: when •

    $default  reduce using rule 15 (flow)


State 27

   16 flow: from •

    $default  reduce using rule 16 (flow)


State 28

   13 statement: expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55

    $default  reduce using rule 13 (statement)


State 29

   40 expression: value •

    $default  reduce using rule 40 (expression)


State 30

   11 statement: return •

    $default  reduce using rule 11 (statement)


State 31

    3 START: START ufunction • EOL

    EOL  shift, and go to state 56


State 32

   10 statement: funcall •
   41 expression: funcall •

    ';'       reduce using rule 10 (statement)
    ';'       [reduce using rule 41 (expression)]
    $default  reduce using rule 41 (expression)


State 33

    4 START: START error EOL •

    $default  reduce using rule 4 (START)


State 34

   25 from: FROM '[' • declare TO expression STEP expression ']' '{' statements '}'

    DATA_TYPE  shift, and go to state 17

    declare  go to state 57


State 35

   23 when: WHEN '[' • condition ']' '{' statements '}'

    NOT     shift, and go to state 58
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 59

    condition   go to state 60
    expression  go to state 61
    value       go to state 29
    funcall     go to state 40


State 36

   24 when: WHEN '{' • statements '}' UNTIL '[' condition ']'

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 62
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 37

   21 whether: WHETHER '[' • condition ']' THEN ':' statements
   22        | WHETHER '[' • condition ']' THEN ':' statements OTHERWISE ':' statements

    NOT     shift, and go to state 58
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 59

    condition   go to state 63
    expression  go to state 61
    value       go to state 29
    funcall     go to state 40


State 38

   45 value: ID •
   53 funcall: ID • '(' explist ')'

    '('  shift, and go to state 47

    $default  reduce using rule 45 (value)


State 39

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   51 return: RETURN expression • ';'

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55
    ';'    shift, and go to state 64


State 40

   41 expression: funcall •

    $default  reduce using rule 41 (expression)


State 41

   52 ufunction: DEFINE ID • '(' symlist ')' '{' statements '}'

    '('  shift, and go to state 65


State 42

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   38           | MINUS expression •

    $default  reduce using rule 38 (expression)


State 43

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   37           | ABS expression • ABS

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55
    ABS    shift, and go to state 66


State 44

   54 funcall: FUNC '(' • explist ')'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 67
    value       go to state 29
    explist     go to state 68
    funcall     go to state 40


State 45

   17 declare: DATA_TYPE ID • init

    ASSIGN  shift, and go to state 69

    $default  reduce using rule 19 (init)

    init  go to state 70


State 46

   20 assignment: ID ASSIGN • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 71
    value       go to state 29
    funcall     go to state 40


State 47

   53 funcall: ID '(' • explist ')'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 67
    value       go to state 29
    explist     go to state 72
    funcall     go to state 40


State 48

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   39           | '(' expression • ')'

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55
    ')'    shift, and go to state 73


State 49

    2 START: START statements EOL •

    $default  reduce using rule 2 (START)


State 50

    6 statements: statement ';' • statements
    7           | statement ';' •

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    $default  reduce using rule 7 (statements)

    statements  go to state 74
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 51

   32 expression: expression PLUS • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 75
    value       go to state 29
    funcall     go to state 40


State 52

   33 expression: expression MINUS • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 76
    value       go to state 29
    funcall     go to state 40


State 53

   34 expression: expression MUL • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 77
    value       go to state 29
    funcall     go to state 40


State 54

   35 expression: expression DIV • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 78
    value       go to state 29
    funcall     go to state 40


State 55

   36 expression: expression POW • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 79
    value       go to state 29
    funcall     go to state 40


State 56

    3 START: START ufunction EOL •

    $default  reduce using rule 3 (START)


State 57

   25 from: FROM '[' declare • TO expression STEP expression ']' '{' statements '}'

    TO  shift, and go to state 80


State 58

   29 condition: NOT • condition

    NOT     shift, and go to state 58
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 59

    condition   go to state 81
    expression  go to state 61
    value       go to state 29
    funcall     go to state 40


State 59

   30 condition: '(' • condition ')'
   39 expression: '(' • expression ')'

    NOT     shift, and go to state 58
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 59

    condition   go to state 82
    expression  go to state 83
    value       go to state 29
    funcall     go to state 40


State 60

   23 when: WHEN '[' condition • ']' '{' statements '}'
   27 condition: condition • AND condition
   28          | condition • OR condition

    AND  shift, and go to state 84
    OR   shift, and go to state 85
    ']'  shift, and go to state 86


State 61

   26 condition: expression • CMP expression
   31          | expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55
    CMP    shift, and go to state 87

    $default  reduce using rule 31 (condition)


State 62

   24 when: WHEN '{' statements • '}' UNTIL '[' condition ']'

    '}'  shift, and go to state 88


State 63

   21 whether: WHETHER '[' condition • ']' THEN ':' statements
   22        | WHETHER '[' condition • ']' THEN ':' statements OTHERWISE ':' statements
   27 condition: condition • AND condition
   28          | condition • OR condition

    AND  shift, and go to state 84
    OR   shift, and go to state 85
    ']'  shift, and go to state 89


State 64

   51 return: RETURN expression ';' •

    $default  reduce using rule 51 (return)


State 65

   52 ufunction: DEFINE ID '(' • symlist ')' '{' statements '}'

    ID  shift, and go to state 90

    symlist  go to state 91


State 66

   37 expression: ABS expression ABS •

    $default  reduce using rule 37 (expression)


State 67

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   47 explist: expression •
   48        | expression • ',' explist

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55
    ','    shift, and go to state 92

    $default  reduce using rule 47 (explist)


State 68

   54 funcall: FUNC '(' explist • ')'

    ')'  shift, and go to state 93


State 69

   18 init: ASSIGN • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 94
    value       go to state 29
    funcall     go to state 40


State 70

   17 declare: DATA_TYPE ID init •

    $default  reduce using rule 17 (declare)


State 71

   20 assignment: ID ASSIGN expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55

    $default  reduce using rule 20 (assignment)


State 72

   53 funcall: ID '(' explist • ')'

    ')'  shift, and go to state 95


State 73

   39 expression: '(' expression ')' •

    $default  reduce using rule 39 (expression)


State 74

    6 statements: statement ';' statements •

    $default  reduce using rule 6 (statements)


State 75

   32 expression: expression • PLUS expression
   32           | expression PLUS expression •
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    MUL  shift, and go to state 53
    DIV  shift, and go to state 54

    $default  reduce using rule 32 (expression)


State 76

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   33           | expression MINUS expression •
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    MUL  shift, and go to state 53
    DIV  shift, and go to state 54

    $default  reduce using rule 33 (expression)


State 77

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   34           | expression MUL expression •
   35           | expression • DIV expression
   36           | expression • POW expression

    $default  reduce using rule 34 (expression)


State 78

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   35           | expression DIV expression •
   36           | expression • POW expression

    $default  reduce using rule 35 (expression)


State 79

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   36           | expression POW expression •

    MUL  shift, and go to state 53
    DIV  shift, and go to state 54

    $default  reduce using rule 36 (expression)


State 80

   25 from: FROM '[' declare TO • expression STEP expression ']' '{' statements '}'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 96
    value       go to state 29
    funcall     go to state 40


State 81

   27 condition: condition • AND condition
   28          | condition • OR condition
   29          | NOT condition •

    AND  shift, and go to state 84
    OR   shift, and go to state 85

    AND       [reduce using rule 29 (condition)]
    OR        [reduce using rule 29 (condition)]
    $default  reduce using rule 29 (condition)


State 82

   27 condition: condition • AND condition
   28          | condition • OR condition
   30          | '(' condition • ')'

    AND  shift, and go to state 84
    OR   shift, and go to state 85
    ')'  shift, and go to state 97


State 83

   26 condition: expression • CMP expression
   31          | expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   39           | '(' expression • ')'

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55
    CMP    shift, and go to state 87
    ')'    shift, and go to state 73

    ')'       [reduce using rule 31 (condition)]
    $default  reduce using rule 31 (condition)


State 84

   27 condition: condition AND • condition

    NOT     shift, and go to state 58
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 59

    condition   go to state 98
    expression  go to state 61
    value       go to state 29
    funcall     go to state 40


State 85

   28 condition: condition OR • condition

    NOT     shift, and go to state 58
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 59

    condition   go to state 99
    expression  go to state 61
    value       go to state 29
    funcall     go to state 40


State 86

   23 when: WHEN '[' condition ']' • '{' statements '}'

    '{'  shift, and go to state 100


State 87

   26 condition: expression CMP • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 101
    value       go to state 29
    funcall     go to state 40


State 88

   24 when: WHEN '{' statements '}' • UNTIL '[' condition ']'

    UNTIL  shift, and go to state 102


State 89

   21 whether: WHETHER '[' condition ']' • THEN ':' statements
   22        | WHETHER '[' condition ']' • THEN ':' statements OTHERWISE ':' statements

    THEN  shift, and go to state 103


State 90

   49 symlist: ID •
   50        | ID • ',' symlist

    ','  shift, and go to state 104

    $default  reduce using rule 49 (symlist)


State 91

   52 ufunction: DEFINE ID '(' symlist • ')' '{' statements '}'

    ')'  shift, and go to state 105


State 92

   48 explist: expression ',' • explist

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 67
    value       go to state 29
    explist     go to state 106
    funcall     go to state 40


State 93

   54 funcall: FUNC '(' explist ')' •

    $default  reduce using rule 54 (funcall)


State 94

   18 init: ASSIGN expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55

    $default  reduce using rule 18 (init)


State 95

   53 funcall: ID '(' explist ')' •

    $default  reduce using rule 53 (funcall)


State 96

   25 from: FROM '[' declare TO expression • STEP expression ']' '{' statements '}'
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    STEP   shift, and go to state 107
    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55


State 97

   30 condition: '(' condition ')' •

    $default  reduce using rule 30 (condition)


State 98

   27 condition: condition • AND condition
   27          | condition AND condition •
   28          | condition • OR condition

    AND  shift, and go to state 84
    OR   shift, and go to state 85

    AND       [reduce using rule 27 (condition)]
    OR        [reduce using rule 27 (condition)]
    $default  reduce using rule 27 (condition)


State 99

   27 condition: condition • AND condition
   28          | condition • OR condition
   28          | condition OR condition •

    AND  shift, and go to state 84
    OR   shift, and go to state 85

    AND       [reduce using rule 28 (condition)]
    OR        [reduce using rule 28 (condition)]
    $default  reduce using rule 28 (condition)


State 100

   23 when: WHEN '[' condition ']' '{' • statements '}'

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 108
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 101

   26 condition: expression CMP expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55

    $default  reduce using rule 26 (condition)


State 102

   24 when: WHEN '{' statements '}' UNTIL • '[' condition ']'

    '['  shift, and go to state 109


State 103

   21 whether: WHETHER '[' condition ']' THEN • ':' statements
   22        | WHETHER '[' condition ']' THEN • ':' statements OTHERWISE ':' statements

    ':'  shift, and go to state 110


State 104

   50 symlist: ID ',' • symlist

    ID  shift, and go to state 90

    symlist  go to state 111


State 105

   52 ufunction: DEFINE ID '(' symlist ')' • '{' statements '}'

    '{'  shift, and go to state 112


State 106

   48 explist: expression ',' explist •

    $default  reduce using rule 48 (explist)


State 107

   25 from: FROM '[' declare TO expression STEP • expression ']' '{' statements '}'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 19

    expression  go to state 113
    value       go to state 29
    funcall     go to state 40


State 108

   23 when: WHEN '[' condition ']' '{' statements • '}'

    '}'  shift, and go to state 114


State 109

   24 when: WHEN '{' statements '}' UNTIL '[' • condition ']'

    NOT     shift, and go to state 58
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 38
    '('     shift, and go to state 59

    condition   go to state 115
    expression  go to state 61
    value       go to state 29
    funcall     go to state 40


State 110

   21 whether: WHETHER '[' condition ']' THEN ':' • statements
   22        | WHETHER '[' condition ']' THEN ':' • statements OTHERWISE ':' statements

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 116
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 111

   50 symlist: ID ',' symlist •

    $default  reduce using rule 50 (symlist)


State 112

   52 ufunction: DEFINE ID '(' symlist ')' '{' • statements '}'

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 117
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 113

   25 from: FROM '[' declare TO expression STEP expression • ']' '{' statements '}'
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55
    ']'    shift, and go to state 118


State 114

   23 when: WHEN '[' condition ']' '{' statements '}' •

    $default  reduce using rule 23 (when)


State 115

   24 when: WHEN '{' statements '}' UNTIL '[' condition • ']'
   27 condition: condition • AND condition
   28          | condition • OR condition

    AND  shift, and go to state 84
    OR   shift, and go to state 85
    ']'  shift, and go to state 119


State 116

   21 whether: WHETHER '[' condition ']' THEN ':' statements •
   22        | WHETHER '[' condition ']' THEN ':' statements • OTHERWISE ':' statements

    OTHERWISE  shift, and go to state 120

    $default  reduce using rule 21 (whether)


State 117

   52 ufunction: DEFINE ID '(' symlist ')' '{' statements • '}'

    '}'  shift, and go to state 121


State 118

   25 from: FROM '[' declare TO expression STEP expression ']' • '{' statements '}'

    '{'  shift, and go to state 122


State 119

   24 when: WHEN '{' statements '}' UNTIL '[' condition ']' •

    $default  reduce using rule 24 (when)


State 120

   22 whether: WHETHER '[' condition ']' THEN ':' statements OTHERWISE • ':' statements

    ':'  shift, and go to state 123


State 121

   52 ufunction: DEFINE ID '(' symlist ')' '{' statements '}' •

    $default  reduce using rule 52 (ufunction)


State 122

   25 from: FROM '[' declare TO expression STEP expression ']' '{' • statements '}'

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 124
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 123

   22 whether: WHETHER '[' condition ']' THEN ':' statements OTHERWISE ':' • statements

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 125
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 124

   25 from: FROM '[' declare TO expression STEP expression ']' '{' statements • '}'

    '}'  shift, and go to state 126


State 125

   22 whether: WHETHER '[' condition ']' THEN ':' statements OTHERWISE ':' statements •

    $default  reduce using rule 22 (whether)


State 126

   25 from: FROM '[' declare TO expression STEP expression ']' '{' statements '}' •

    $default  reduce using rule 25 (from)

Terminals unused in grammar

    BOOLEAN


State 21 conflicts: 1 shift/reduce
State 32 conflicts: 5 reduce/reduce
State 97 conflicts: 1 shift/reduce


Grammar

    0 $accept: START $end

    1 START: ε
    2      | START statements EOL
    3      | START ufunction EOL
    4      | START error EOL
    5      | START EOL

    6 statements: statement ';' statements
    7           | statement

    8 statement: declare
    9          | assignment
   10          | funcall
   11          | return
   12          | flow
   13          | expression

   14 flow: whether
   15     | when
   16     | from

   17 declare: DATA_TYPE ID init

   18 init: ASSIGN expression
   19     | ε

   20 assignment: ID ASSIGN expression

   21 whether: WHETHER '(' condition ')' THEN ':' statements
   22        | WHETHER '(' condition ')' THEN ':' statements OTHERWISE ':' statements

   23 when: WHEN condition UNTIL statements

   24 from: FROM expression TO expression ';' STEP expression '%' statements '%'

   25 condition: expression CMP expression
   26          | expression

   27 expression: expression PLUS expression
   28           | expression MINUS expression
   29           | expression MUL expression
   30           | expression DIV expression
   31           | expression POW expression
   32           | ABS expression ABS
   33           | MINUS expression
   34           | '(' expression ')'
   35           | value
   36           | funcall

   37 value: NUM
   38      | BINARY
   39      | ROMAN
   40      | ID
   41      | STR

   42 explist: expression
   43        | expression ',' explist

   44 symlist: ID
   45        | ID ',' symlist

   46 return: RETURN expression ';'

   47 ufunction: DEFINE ID '(' symlist ')' '{' statements '}'

   48 funcall: ID '(' explist ')'
   49        | FUNC '(' explist ')'


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 24
    '(' (40) 21 22 34 47 48 49
    ')' (41) 21 22 34 47 48 49
    ',' (44) 43 45
    ':' (58) 21 22
    ';' (59) 6 24 46
    '{' (123) 47
    '}' (125) 47
    error (256) 4
    STEP (258) 24
    TO (259) 24
    FROM (260) 24
    WHEN (261) 23
    OTHERWISE (262) 22
    WHETHER (263) 21 22
    RETURN (264) 46
    DEFINE (265) 47
    UNTIL (266) 23
    EOL (267) 2 3 4 5
    THEN (268) 21 22
    BOOLEAN (269)
    PLUS <op> (270) 27
    MINUS <op> (271) 28 33
    MUL <op> (272) 29
    DIV <op> (273) 30
    POW <op> (274) 31
    ASSIGN <op> (275) 18 20
    ABS <op> (276) 32
    NUM <num> (277) 37
    BINARY <num> (278) 38
    ROMAN <num> (279) 39
    STR <st> (280) 41
    FUNC <fn> (281) 49
    DATA_TYPE <fn> (282) 17
    ID <s> (283) 17 20 40 44 45 47 48
    CMP <fn> (284) 25
    UMINUS (285)


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    START <a> (40)
        on left: 1 2 3 4 5
        on right: 0 2 3 4 5
    statements <a> (41)
        on left: 6 7
        on right: 2 6 21 22 23 24 47
    statement <a> (42)
        on left: 8 9 10 11 12 13
        on right: 6 7
    flow <a> (43)
        on left: 14 15 16
        on right: 12
    declare <a> (44)
        on left: 17
        on right: 8
    init <a> (45)
        on left: 18 19
        on right: 17
    assignment <a> (46)
        on left: 20
        on right: 9
    whether <a> (47)
        on left: 21 22
        on right: 14
    when <a> (48)
        on left: 23
        on right: 15
    from <a> (49)
        on left: 24
        on right: 16
    condition <a> (50)
        on left: 25 26
        on right: 21 22 23
    expression <a> (51)
        on left: 27 28 29 30 31 32 33 34 35 36
        on right: 13 18 20 24 25 26 27 28 29 30 31 32 33 34 42 43 46
    value <a> (52)
        on left: 37 38 39 40 41
        on right: 35
    explist <a> (53)
        on left: 42 43
        on right: 43 48 49
    symlist <sl> (54)
        on left: 44 45
        on right: 45 47
    return <a> (55)
        on left: 46
        on right: 11
    ufunction <a> (56)
        on left: 47
        on right: 3
    funcall <a> (57)
        on left: 48 49
        on right: 10 36


State 0

    0 $accept: • START $end

    $default  reduce using rule 1 (START)

    START  go to state 1


State 1

    0 $accept: START • $end
    2 START: START • statements EOL
    3      | START • ufunction EOL
    4      | START • error EOL
    5      | START • EOL

    $end       shift, and go to state 2
    error      shift, and go to state 3
    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    DEFINE     shift, and go to state 8
    EOL        shift, and go to state 9
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 20
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    ufunction   go to state 31
    funcall     go to state 32


State 2

    0 $accept: START $end •

    $default  accept


State 3

    4 START: START error • EOL

    EOL  shift, and go to state 33


State 4

   24 from: FROM • expression TO expression ';' STEP expression '%' statements '%'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 35
    value       go to state 29
    funcall     go to state 36


State 5

   23 when: WHEN • condition UNTIL statements

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    condition   go to state 37
    expression  go to state 38
    value       go to state 29
    funcall     go to state 36


State 6

   21 whether: WHETHER • '(' condition ')' THEN ':' statements
   22        | WHETHER • '(' condition ')' THEN ':' statements OTHERWISE ':' statements

    '('  shift, and go to state 39


State 7

   46 return: RETURN • expression ';'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 40
    value       go to state 29
    funcall     go to state 36


State 8

   47 ufunction: DEFINE • ID '(' symlist ')' '{' statements '}'

    ID  shift, and go to state 41


State 9

    5 START: START EOL •

    $default  reduce using rule 5 (START)


State 10

   33 expression: MINUS • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 42
    value       go to state 29
    funcall     go to state 36


State 11

   32 expression: ABS • expression ABS

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 43
    value       go to state 29
    funcall     go to state 36


State 12

   37 value: NUM •

    $default  reduce using rule 37 (value)


State 13

   38 value: BINARY •

    $default  reduce using rule 38 (value)


State 14

   39 value: ROMAN •

    $default  reduce using rule 39 (value)


State 15

   41 value: STR •

    $default  reduce using rule 41 (value)


State 16

   49 funcall: FUNC • '(' explist ')'

    '('  shift, and go to state 44


State 17

   17 declare: DATA_TYPE • ID init

    ID  shift, and go to state 45


State 18

   20 assignment: ID • ASSIGN expression
   40 value: ID •
   48 funcall: ID • '(' explist ')'

    ASSIGN  shift, and go to state 46
    '('     shift, and go to state 47

    $default  reduce using rule 40 (value)


State 19

   34 expression: '(' • expression ')'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 48
    value       go to state 29
    funcall     go to state 36


State 20

    2 START: START statements • EOL

    EOL  shift, and go to state 49


State 21

    6 statements: statement • ';' statements
    7           | statement •

    ';'  shift, and go to state 50

    ';'       [reduce using rule 7 (statements)]
    $default  reduce using rule 7 (statements)


State 22

   12 statement: flow •

    $default  reduce using rule 12 (statement)


State 23

    8 statement: declare •

    $default  reduce using rule 8 (statement)


State 24

    9 statement: assignment •

    $default  reduce using rule 9 (statement)


State 25

   14 flow: whether •

    $default  reduce using rule 14 (flow)


State 26

   15 flow: when •

    $default  reduce using rule 15 (flow)


State 27

   16 flow: from •

    $default  reduce using rule 16 (flow)


State 28

   13 statement: expression •
   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   29           | expression • MUL expression
   30           | expression • DIV expression
   31           | expression • POW expression

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55

    $default  reduce using rule 13 (statement)


State 29

   35 expression: value •

    $default  reduce using rule 35 (expression)


State 30

   11 statement: return •

    $default  reduce using rule 11 (statement)


State 31

    3 START: START ufunction • EOL

    EOL  shift, and go to state 56


State 32

   10 statement: funcall •
   36 expression: funcall •

    OTHERWISE  reduce using rule 10 (statement)
    OTHERWISE  [reduce using rule 36 (expression)]
    EOL        reduce using rule 10 (statement)
    EOL        [reduce using rule 36 (expression)]
    PLUS       reduce using rule 36 (expression)
    MINUS      reduce using rule 36 (expression)
    MUL        reduce using rule 36 (expression)
    DIV        reduce using rule 36 (expression)
    POW        reduce using rule 36 (expression)
    ';'        reduce using rule 10 (statement)
    ';'        [reduce using rule 36 (expression)]
    '%'        reduce using rule 10 (statement)
    '%'        [reduce using rule 36 (expression)]
    '}'        reduce using rule 10 (statement)
    '}'        [reduce using rule 36 (expression)]
    $default   reduce using rule 10 (statement)


State 33

    4 START: START error EOL •

    $default  reduce using rule 4 (START)


State 34

   40 value: ID •
   48 funcall: ID • '(' explist ')'

    '('  shift, and go to state 47

    $default  reduce using rule 40 (value)


State 35

   24 from: FROM expression • TO expression ';' STEP expression '%' statements '%'
   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   29           | expression • MUL expression
   30           | expression • DIV expression
   31           | expression • POW expression

    TO     shift, and go to state 57
    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55


State 36

   36 expression: funcall •

    $default  reduce using rule 36 (expression)


State 37

   23 when: WHEN condition • UNTIL statements

    UNTIL  shift, and go to state 58


State 38

   25 condition: expression • CMP expression
   26          | expression •
   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   29           | expression • MUL expression
   30           | expression • DIV expression
   31           | expression • POW expression

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55
    CMP    shift, and go to state 59

    $default  reduce using rule 26 (condition)


State 39

   21 whether: WHETHER '(' • condition ')' THEN ':' statements
   22        | WHETHER '(' • condition ')' THEN ':' statements OTHERWISE ':' statements

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    condition   go to state 60
    expression  go to state 38
    value       go to state 29
    funcall     go to state 36


State 40

   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   29           | expression • MUL expression
   30           | expression • DIV expression
   31           | expression • POW expression
   46 return: RETURN expression • ';'

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55
    ';'    shift, and go to state 61


State 41

   47 ufunction: DEFINE ID • '(' symlist ')' '{' statements '}'

    '('  shift, and go to state 62


State 42

   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   29           | expression • MUL expression
   30           | expression • DIV expression
   31           | expression • POW expression
   33           | MINUS expression •

    $default  reduce using rule 33 (expression)


State 43

   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   29           | expression • MUL expression
   30           | expression • DIV expression
   31           | expression • POW expression
   32           | ABS expression • ABS

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55
    ABS    shift, and go to state 63


State 44

   49 funcall: FUNC '(' • explist ')'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 64
    value       go to state 29
    explist     go to state 65
    funcall     go to state 36


State 45

   17 declare: DATA_TYPE ID • init

    ASSIGN  shift, and go to state 66

    $default  reduce using rule 19 (init)

    init  go to state 67


State 46

   20 assignment: ID ASSIGN • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 68
    value       go to state 29
    funcall     go to state 36


State 47

   48 funcall: ID '(' • explist ')'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 64
    value       go to state 29
    explist     go to state 69
    funcall     go to state 36


State 48

   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   29           | expression • MUL expression
   30           | expression • DIV expression
   31           | expression • POW expression
   34           | '(' expression • ')'

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55
    ')'    shift, and go to state 70


State 49

    2 START: START statements EOL •

    $default  reduce using rule 2 (START)


State 50

    6 statements: statement ';' • statements

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 71
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 51

   27 expression: expression PLUS • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 72
    value       go to state 29
    funcall     go to state 36


State 52

   28 expression: expression MINUS • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 73
    value       go to state 29
    funcall     go to state 36


State 53

   29 expression: expression MUL • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 74
    value       go to state 29
    funcall     go to state 36


State 54

   30 expression: expression DIV • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 75
    value       go to state 29
    funcall     go to state 36


State 55

   31 expression: expression POW • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 76
    value       go to state 29
    funcall     go to state 36


State 56

    3 START: START ufunction EOL •

    $default  reduce using rule 3 (START)


State 57

   24 from: FROM expression TO • expression ';' STEP expression '%' statements '%'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 77
    value       go to state 29
    funcall     go to state 36


State 58

   23 when: WHEN condition UNTIL • statements

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 78
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 59

   25 condition: expression CMP • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 79
    value       go to state 29
    funcall     go to state 36


State 60

   21 whether: WHETHER '(' condition • ')' THEN ':' statements
   22        | WHETHER '(' condition • ')' THEN ':' statements OTHERWISE ':' statements

    ')'  shift, and go to state 80


State 61

   46 return: RETURN expression ';' •

    $default  reduce using rule 46 (return)


State 62

   47 ufunction: DEFINE ID '(' • symlist ')' '{' statements '}'

    ID  shift, and go to state 81

    symlist  go to state 82


State 63

   32 expression: ABS expression ABS •

    $default  reduce using rule 32 (expression)


State 64

   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   29           | expression • MUL expression
   30           | expression • DIV expression
   31           | expression • POW expression
   42 explist: expression •
   43        | expression • ',' explist

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55
    ','    shift, and go to state 83

    $default  reduce using rule 42 (explist)


State 65

   49 funcall: FUNC '(' explist • ')'

    ')'  shift, and go to state 84


State 66

   18 init: ASSIGN • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 85
    value       go to state 29
    funcall     go to state 36


State 67

   17 declare: DATA_TYPE ID init •

    $default  reduce using rule 17 (declare)


State 68

   20 assignment: ID ASSIGN expression •
   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   29           | expression • MUL expression
   30           | expression • DIV expression
   31           | expression • POW expression

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55

    $default  reduce using rule 20 (assignment)


State 69

   48 funcall: ID '(' explist • ')'

    ')'  shift, and go to state 86


State 70

   34 expression: '(' expression ')' •

    $default  reduce using rule 34 (expression)


State 71

    6 statements: statement ';' statements •

    $default  reduce using rule 6 (statements)


State 72

   27 expression: expression • PLUS expression
   27           | expression PLUS expression •
   28           | expression • MINUS expression
   29           | expression • MUL expression
   30           | expression • DIV expression
   31           | expression • POW expression

    MUL  shift, and go to state 53
    DIV  shift, and go to state 54

    $default  reduce using rule 27 (expression)


State 73

   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   28           | expression MINUS expression •
   29           | expression • MUL expression
   30           | expression • DIV expression
   31           | expression • POW expression

    MUL  shift, and go to state 53
    DIV  shift, and go to state 54

    $default  reduce using rule 28 (expression)


State 74

   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   29           | expression • MUL expression
   29           | expression MUL expression •
   30           | expression • DIV expression
   31           | expression • POW expression

    $default  reduce using rule 29 (expression)


State 75

   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   29           | expression • MUL expression
   30           | expression • DIV expression
   30           | expression DIV expression •
   31           | expression • POW expression

    $default  reduce using rule 30 (expression)


State 76

   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   29           | expression • MUL expression
   30           | expression • DIV expression
   31           | expression • POW expression
   31           | expression POW expression •

    MUL  shift, and go to state 53
    DIV  shift, and go to state 54

    $default  reduce using rule 31 (expression)


State 77

   24 from: FROM expression TO expression • ';' STEP expression '%' statements '%'
   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   29           | expression • MUL expression
   30           | expression • DIV expression
   31           | expression • POW expression

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55
    ';'    shift, and go to state 87


State 78

   23 when: WHEN condition UNTIL statements •

    $default  reduce using rule 23 (when)


State 79

   25 condition: expression CMP expression •
   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   29           | expression • MUL expression
   30           | expression • DIV expression
   31           | expression • POW expression

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55

    $default  reduce using rule 25 (condition)


State 80

   21 whether: WHETHER '(' condition ')' • THEN ':' statements
   22        | WHETHER '(' condition ')' • THEN ':' statements OTHERWISE ':' statements

    THEN  shift, and go to state 88


State 81

   44 symlist: ID •
   45        | ID • ',' symlist

    ','  shift, and go to state 89

    $default  reduce using rule 44 (symlist)


State 82

   47 ufunction: DEFINE ID '(' symlist • ')' '{' statements '}'

    ')'  shift, and go to state 90


State 83

   43 explist: expression ',' • explist

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 64
    value       go to state 29
    explist     go to state 91
    funcall     go to state 36


State 84

   49 funcall: FUNC '(' explist ')' •

    $default  reduce using rule 49 (funcall)


State 85

   18 init: ASSIGN expression •
   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   29           | expression • MUL expression
   30           | expression • DIV expression
   31           | expression • POW expression

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55

    $default  reduce using rule 18 (init)


State 86

   48 funcall: ID '(' explist ')' •

    $default  reduce using rule 48 (funcall)


State 87

   24 from: FROM expression TO expression ';' • STEP expression '%' statements '%'

    STEP  shift, and go to state 92


State 88

   21 whether: WHETHER '(' condition ')' THEN • ':' statements
   22        | WHETHER '(' condition ')' THEN • ':' statements OTHERWISE ':' statements

    ':'  shift, and go to state 93


State 89

   45 symlist: ID ',' • symlist

    ID  shift, and go to state 81

    symlist  go to state 94


State 90

   47 ufunction: DEFINE ID '(' symlist ')' • '{' statements '}'

    '{'  shift, and go to state 95


State 91

   43 explist: expression ',' explist •

    $default  reduce using rule 43 (explist)


State 92

   24 from: FROM expression TO expression ';' STEP • expression '%' statements '%'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 34
    '('     shift, and go to state 19

    expression  go to state 96
    value       go to state 29
    funcall     go to state 36


State 93

   21 whether: WHETHER '(' condition ')' THEN ':' • statements
   22        | WHETHER '(' condition ')' THEN ':' • statements OTHERWISE ':' statements

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 97
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 94

   45 symlist: ID ',' symlist •

    $default  reduce using rule 45 (symlist)


State 95

   47 ufunction: DEFINE ID '(' symlist ')' '{' • statements '}'

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 98
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 96

   24 from: FROM expression TO expression ';' STEP expression • '%' statements '%'
   27 expression: expression • PLUS expression
   28           | expression • MINUS expression
   29           | expression • MUL expression
   30           | expression • DIV expression
   31           | expression • POW expression

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    POW    shift, and go to state 55
    '%'    shift, and go to state 99


State 97

   21 whether: WHETHER '(' condition ')' THEN ':' statements •
   22        | WHETHER '(' condition ')' THEN ':' statements • OTHERWISE ':' statements

    OTHERWISE  shift, and go to state 100

    OTHERWISE  [reduce using rule 21 (whether)]
    $default   reduce using rule 21 (whether)


State 98

   47 ufunction: DEFINE ID '(' symlist ')' '{' statements • '}'

    '}'  shift, and go to state 101


State 99

   24 from: FROM expression TO expression ';' STEP expression '%' • statements '%'

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 102
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 100

   22 whether: WHETHER '(' condition ')' THEN ':' statements OTHERWISE • ':' statements

    ':'  shift, and go to state 103


State 101

   47 ufunction: DEFINE ID '(' symlist ')' '{' statements '}' •

    $default  reduce using rule 47 (ufunction)


State 102

   24 from: FROM expression TO expression ';' STEP expression '%' statements • '%'

    '%'  shift, and go to state 104


State 103

   22 whether: WHETHER '(' condition ')' THEN ':' statements OTHERWISE ':' • statements

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 105
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 104

   24 from: FROM expression TO expression ';' STEP expression '%' statements '%' •

    $default  reduce using rule 24 (from)


State 105

   22 whether: WHETHER '(' condition ')' THEN ':' statements OTHERWISE ':' statements •

    $default  reduce using rule 22 (whether)

Terminals unused in grammar

    BOOLEAN


State 21 conflicts: 1 shift/reduce
State 32 conflicts: 4 reduce/reduce
State 79 conflicts: 2 shift/reduce
State 80 conflicts: 4 reduce/reduce
State 82 conflicts: 1 shift/reduce
State 96 conflicts: 2 shift/reduce
State 97 conflicts: 2 shift/reduce
State 110 conflicts: 1 shift/reduce


Grammar

    0 $accept: START $end

    1 START: ε
    2      | START statements EOL
    3      | START ufunction EOL
    4      | START error EOL
    5      | START EOL

    6 statements: statement ';' statements
    7           | statement

    8 statement: declare
    9          | assignment
   10          | funcall
   11          | return
   12          | flow
   13          | expression

   14 flow: whether
   15     | when
   16     | from

   17 declare: DATA_TYPE ID init

   18 init: ASSIGN expression
   19     | ε

   20 assignment: ID ASSIGN expression

   21 whether: WHETHER '[' condition ']' THEN ':' statements
   22        | WHETHER '[' condition ']' THEN ':' statements OTHERWISE ':' statements

   23 when: WHEN '[' condition ']' UNTIL statements

   24 from: FROM declare TO expression STEP expression '{' statements '}'

   25 condition: expression CMP expression
   26          | condition AND condition
   27          | condition OR condition
   28          | NOT condition
   29          | NOT expression
   30          | '(' condition ')'
   31          | expression

   32 expression: expression PLUS expression
   33           | expression MINUS expression
   34           | expression MUL expression
   35           | expression DIV expression
   36           | expression POW expression
   37           | ABS expression ABS
   38           | MINUS expression
   39           | '(' expression ')'
   40           | value
   41           | funcall

   42 value: NUM
   43      | BINARY
   44      | ROMAN
   45      | ID
   46      | STR

   47 explist: expression
   48        | expression ',' explist

   49 symlist: ID
   50        | ID ',' symlist

   51 return: RETURN expression ';'

   52 ufunction: DEFINE ID '(' symlist ')' '{' statements '}'

   53 funcall: ID '(' explist ')'
   54        | FUNC '(' explist ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 30 39 52 53 54
    ')' (41) 30 39 52 53 54
    ',' (44) 48 50
    ':' (58) 21 22
    ';' (59) 6 51
    '[' (91) 21 22 23
    ']' (93) 21 22 23
    '{' (123) 24 52
    '}' (125) 24 52
    error (256) 4
    STEP (258) 24
    TO (259) 24
    FROM (260) 24
    WHEN (261) 23
    OTHERWISE (262) 22
    WHETHER (263) 21 22
    RETURN (264) 51
    DEFINE (265) 52
    UNTIL (266) 23
    EOL (267) 2 3 4 5
    THEN (268) 21 22
    BOOLEAN (269)
    AND (270) 26
    OR (271) 27
    NOT (272) 28 29
    PLUS <op> (273) 32
    MINUS <op> (274) 33 38
    MUL <op> (275) 34
    DIV <op> (276) 35
    POW <op> (277) 36
    ASSIGN <op> (278) 18 20
    ABS <op> (279) 37
    NUM <num> (280) 42
    BINARY <num> (281) 43
    ROMAN <num> (282) 44
    STR <st> (283) 46
    FUNC <fn> (284) 54
    DATA_TYPE <fn> (285) 17
    ID <s> (286) 17 20 45 49 50 52 53
    CMP <fn> (287) 25
    UMINUS (288)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    START <a> (44)
        on left: 1 2 3 4 5
        on right: 0 2 3 4 5
    statements <a> (45)
        on left: 6 7
        on right: 2 6 21 22 23 24 52
    statement <a> (46)
        on left: 8 9 10 11 12 13
        on right: 6 7
    flow <a> (47)
        on left: 14 15 16
        on right: 12
    declare <a> (48)
        on left: 17
        on right: 8 24
    init <a> (49)
        on left: 18 19
        on right: 17
    assignment <a> (50)
        on left: 20
        on right: 9
    whether <a> (51)
        on left: 21 22
        on right: 14
    when <a> (52)
        on left: 23
        on right: 15
    from <a> (53)
        on left: 24
        on right: 16
    condition <a> (54)
        on left: 25 26 27 28 29 30 31
        on right: 21 22 23 26 27 28 30
    expression <a> (55)
        on left: 32 33 34 35 36 37 38 39 40 41
        on right: 13 18 20 24 25 29 31 32 33 34 35 36 37 38 39 47 48 51
    value <a> (56)
        on left: 42 43 44 45 46
        on right: 40
    explist <a> (57)
        on left: 47 48
        on right: 48 53 54
    symlist <sl> (58)
        on left: 49 50
        on right: 50 52
    return <a> (59)
        on left: 51
        on right: 11
    ufunction <a> (60)
        on left: 52
        on right: 3
    funcall <a> (61)
        on left: 53 54
        on right: 10 41


State 0

    0 $accept: • START $end

    $default  reduce using rule 1 (START)

    START  go to state 1


State 1

    0 $accept: START • $end
    2 START: START • statements EOL
    3      | START • ufunction EOL
    4      | START • error EOL
    5      | START • EOL

    $end       shift, and go to state 2
    error      shift, and go to state 3
    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    DEFINE     shift, and go to state 8
    EOL        shift, and go to state 9
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 20
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    ufunction   go to state 31
    funcall     go to state 32


State 2

    0 $accept: START $end •

    $default  accept


State 3

    4 START: START error • EOL

    EOL  shift, and go to state 33


State 4

   24 from: FROM • declare TO expression STEP expression '{' statements '}'

    DATA_TYPE  shift, and go to state 17

    declare  go to state 34


State 5

   23 when: WHEN • '[' condition ']' UNTIL statements

    '['  shift, and go to state 35


State 6

   21 whether: WHETHER • '[' condition ']' THEN ':' statements
   22        | WHETHER • '[' condition ']' THEN ':' statements OTHERWISE ':' statements

    '['  shift, and go to state 36


State 7

   51 return: RETURN • expression ';'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 38
    value       go to state 29
    funcall     go to state 39


State 8

   52 ufunction: DEFINE • ID '(' symlist ')' '{' statements '}'

    ID  shift, and go to state 40


State 9

    5 START: START EOL •

    $default  reduce using rule 5 (START)


State 10

   38 expression: MINUS • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 41
    value       go to state 29
    funcall     go to state 39


State 11

   37 expression: ABS • expression ABS

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 42
    value       go to state 29
    funcall     go to state 39


State 12

   42 value: NUM •

    $default  reduce using rule 42 (value)


State 13

   43 value: BINARY •

    $default  reduce using rule 43 (value)


State 14

   44 value: ROMAN •

    $default  reduce using rule 44 (value)


State 15

   46 value: STR •

    $default  reduce using rule 46 (value)


State 16

   54 funcall: FUNC • '(' explist ')'

    '('  shift, and go to state 43


State 17

   17 declare: DATA_TYPE • ID init

    ID  shift, and go to state 44


State 18

   20 assignment: ID • ASSIGN expression
   45 value: ID •
   53 funcall: ID • '(' explist ')'

    ASSIGN  shift, and go to state 45
    '('     shift, and go to state 46

    $default  reduce using rule 45 (value)


State 19

   39 expression: '(' • expression ')'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 47
    value       go to state 29
    funcall     go to state 39


State 20

    2 START: START statements • EOL

    EOL  shift, and go to state 48


State 21

    6 statements: statement • ';' statements
    7           | statement •

    ';'  shift, and go to state 49

    ';'       [reduce using rule 7 (statements)]
    $default  reduce using rule 7 (statements)


State 22

   12 statement: flow •

    $default  reduce using rule 12 (statement)


State 23

    8 statement: declare •

    $default  reduce using rule 8 (statement)


State 24

    9 statement: assignment •

    $default  reduce using rule 9 (statement)


State 25

   14 flow: whether •

    $default  reduce using rule 14 (flow)


State 26

   15 flow: when •

    $default  reduce using rule 15 (flow)


State 27

   16 flow: from •

    $default  reduce using rule 16 (flow)


State 28

   13 statement: expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MUL    shift, and go to state 52
    DIV    shift, and go to state 53
    POW    shift, and go to state 54

    $default  reduce using rule 13 (statement)


State 29

   40 expression: value •

    $default  reduce using rule 40 (expression)


State 30

   11 statement: return •

    $default  reduce using rule 11 (statement)


State 31

    3 START: START ufunction • EOL

    EOL  shift, and go to state 55


State 32

   10 statement: funcall •
   41 expression: funcall •

    OTHERWISE  reduce using rule 10 (statement)
    OTHERWISE  [reduce using rule 41 (expression)]
    EOL        reduce using rule 10 (statement)
    EOL        [reduce using rule 41 (expression)]
    ';'        reduce using rule 10 (statement)
    ';'        [reduce using rule 41 (expression)]
    '}'        reduce using rule 10 (statement)
    '}'        [reduce using rule 41 (expression)]
    $default   reduce using rule 41 (expression)


State 33

    4 START: START error EOL •

    $default  reduce using rule 4 (START)


State 34

   24 from: FROM declare • TO expression STEP expression '{' statements '}'

    TO  shift, and go to state 56


State 35

   23 when: WHEN '[' • condition ']' UNTIL statements

    NOT     shift, and go to state 57
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 58

    condition   go to state 59
    expression  go to state 60
    value       go to state 29
    funcall     go to state 39


State 36

   21 whether: WHETHER '[' • condition ']' THEN ':' statements
   22        | WHETHER '[' • condition ']' THEN ':' statements OTHERWISE ':' statements

    NOT     shift, and go to state 57
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 58

    condition   go to state 61
    expression  go to state 60
    value       go to state 29
    funcall     go to state 39


State 37

   45 value: ID •
   53 funcall: ID • '(' explist ')'

    '('  shift, and go to state 46

    $default  reduce using rule 45 (value)


State 38

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   51 return: RETURN expression • ';'

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MUL    shift, and go to state 52
    DIV    shift, and go to state 53
    POW    shift, and go to state 54
    ';'    shift, and go to state 62


State 39

   41 expression: funcall •

    $default  reduce using rule 41 (expression)


State 40

   52 ufunction: DEFINE ID • '(' symlist ')' '{' statements '}'

    '('  shift, and go to state 63


State 41

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   38           | MINUS expression •

    $default  reduce using rule 38 (expression)


State 42

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   37           | ABS expression • ABS

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MUL    shift, and go to state 52
    DIV    shift, and go to state 53
    POW    shift, and go to state 54
    ABS    shift, and go to state 64


State 43

   54 funcall: FUNC '(' • explist ')'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 65
    value       go to state 29
    explist     go to state 66
    funcall     go to state 39


State 44

   17 declare: DATA_TYPE ID • init

    ASSIGN  shift, and go to state 67

    $default  reduce using rule 19 (init)

    init  go to state 68


State 45

   20 assignment: ID ASSIGN • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 69
    value       go to state 29
    funcall     go to state 39


State 46

   53 funcall: ID '(' • explist ')'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 65
    value       go to state 29
    explist     go to state 70
    funcall     go to state 39


State 47

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   39           | '(' expression • ')'

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MUL    shift, and go to state 52
    DIV    shift, and go to state 53
    POW    shift, and go to state 54
    ')'    shift, and go to state 71


State 48

    2 START: START statements EOL •

    $default  reduce using rule 2 (START)


State 49

    6 statements: statement ';' • statements

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 72
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 50

   32 expression: expression PLUS • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 73
    value       go to state 29
    funcall     go to state 39


State 51

   33 expression: expression MINUS • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 74
    value       go to state 29
    funcall     go to state 39


State 52

   34 expression: expression MUL • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 75
    value       go to state 29
    funcall     go to state 39


State 53

   35 expression: expression DIV • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 76
    value       go to state 29
    funcall     go to state 39


State 54

   36 expression: expression POW • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 77
    value       go to state 29
    funcall     go to state 39


State 55

    3 START: START ufunction EOL •

    $default  reduce using rule 3 (START)


State 56

   24 from: FROM declare TO • expression STEP expression '{' statements '}'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 78
    value       go to state 29
    funcall     go to state 39


State 57

   28 condition: NOT • condition
   29          | NOT • expression

    NOT     shift, and go to state 57
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 58

    condition   go to state 79
    expression  go to state 80
    value       go to state 29
    funcall     go to state 39


State 58

   30 condition: '(' • condition ')'
   39 expression: '(' • expression ')'

    NOT     shift, and go to state 57
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 58

    condition   go to state 81
    expression  go to state 82
    value       go to state 29
    funcall     go to state 39


State 59

   23 when: WHEN '[' condition • ']' UNTIL statements
   26 condition: condition • AND condition
   27          | condition • OR condition

    AND  shift, and go to state 83
    OR   shift, and go to state 84
    ']'  shift, and go to state 85


State 60

   25 condition: expression • CMP expression
   31          | expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MUL    shift, and go to state 52
    DIV    shift, and go to state 53
    POW    shift, and go to state 54
    CMP    shift, and go to state 86

    $default  reduce using rule 31 (condition)


State 61

   21 whether: WHETHER '[' condition • ']' THEN ':' statements
   22        | WHETHER '[' condition • ']' THEN ':' statements OTHERWISE ':' statements
   26 condition: condition • AND condition
   27          | condition • OR condition

    AND  shift, and go to state 83
    OR   shift, and go to state 84
    ']'  shift, and go to state 87


State 62

   51 return: RETURN expression ';' •

    $default  reduce using rule 51 (return)


State 63

   52 ufunction: DEFINE ID '(' • symlist ')' '{' statements '}'

    ID  shift, and go to state 88

    symlist  go to state 89


State 64

   37 expression: ABS expression ABS •

    $default  reduce using rule 37 (expression)


State 65

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   47 explist: expression •
   48        | expression • ',' explist

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MUL    shift, and go to state 52
    DIV    shift, and go to state 53
    POW    shift, and go to state 54
    ','    shift, and go to state 90

    $default  reduce using rule 47 (explist)


State 66

   54 funcall: FUNC '(' explist • ')'

    ')'  shift, and go to state 91


State 67

   18 init: ASSIGN • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 92
    value       go to state 29
    funcall     go to state 39


State 68

   17 declare: DATA_TYPE ID init •

    $default  reduce using rule 17 (declare)


State 69

   20 assignment: ID ASSIGN expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MUL    shift, and go to state 52
    DIV    shift, and go to state 53
    POW    shift, and go to state 54

    $default  reduce using rule 20 (assignment)


State 70

   53 funcall: ID '(' explist • ')'

    ')'  shift, and go to state 93


State 71

   39 expression: '(' expression ')' •

    $default  reduce using rule 39 (expression)


State 72

    6 statements: statement ';' statements •

    $default  reduce using rule 6 (statements)


State 73

   32 expression: expression • PLUS expression
   32           | expression PLUS expression •
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    MUL  shift, and go to state 52
    DIV  shift, and go to state 53

    $default  reduce using rule 32 (expression)


State 74

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   33           | expression MINUS expression •
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    MUL  shift, and go to state 52
    DIV  shift, and go to state 53

    $default  reduce using rule 33 (expression)


State 75

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   34           | expression MUL expression •
   35           | expression • DIV expression
   36           | expression • POW expression

    $default  reduce using rule 34 (expression)


State 76

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   35           | expression DIV expression •
   36           | expression • POW expression

    $default  reduce using rule 35 (expression)


State 77

   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   36           | expression POW expression •

    MUL  shift, and go to state 52
    DIV  shift, and go to state 53

    $default  reduce using rule 36 (expression)


State 78

   24 from: FROM declare TO expression • STEP expression '{' statements '}'
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    STEP   shift, and go to state 94
    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MUL    shift, and go to state 52
    DIV    shift, and go to state 53
    POW    shift, and go to state 54


State 79

   26 condition: condition • AND condition
   27          | condition • OR condition
   28          | NOT condition •

    AND  shift, and go to state 83
    OR   shift, and go to state 84

    AND       [reduce using rule 28 (condition)]
    OR        [reduce using rule 28 (condition)]
    $default  reduce using rule 28 (condition)


State 80

   25 condition: expression • CMP expression
   29          | NOT expression •
   31          | expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MUL    shift, and go to state 52
    DIV    shift, and go to state 53
    POW    shift, and go to state 54
    CMP    shift, and go to state 86

    AND       reduce using rule 29 (condition)
    AND       [reduce using rule 31 (condition)]
    OR        reduce using rule 29 (condition)
    OR        [reduce using rule 31 (condition)]
    ']'       reduce using rule 29 (condition)
    ']'       [reduce using rule 31 (condition)]
    ')'       reduce using rule 29 (condition)
    ')'       [reduce using rule 31 (condition)]
    $default  reduce using rule 29 (condition)


State 81

   26 condition: condition • AND condition
   27          | condition • OR condition
   30          | '(' condition • ')'

    AND  shift, and go to state 83
    OR   shift, and go to state 84
    ')'  shift, and go to state 95


State 82

   25 condition: expression • CMP expression
   31          | expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression
   39           | '(' expression • ')'

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MUL    shift, and go to state 52
    DIV    shift, and go to state 53
    POW    shift, and go to state 54
    CMP    shift, and go to state 86
    ')'    shift, and go to state 71

    ')'       [reduce using rule 31 (condition)]
    $default  reduce using rule 31 (condition)


State 83

   26 condition: condition AND • condition

    NOT     shift, and go to state 57
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 58

    condition   go to state 96
    expression  go to state 60
    value       go to state 29
    funcall     go to state 39


State 84

   27 condition: condition OR • condition

    NOT     shift, and go to state 57
    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 58

    condition   go to state 97
    expression  go to state 60
    value       go to state 29
    funcall     go to state 39


State 85

   23 when: WHEN '[' condition ']' • UNTIL statements

    UNTIL  shift, and go to state 98


State 86

   25 condition: expression CMP • expression

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 99
    value       go to state 29
    funcall     go to state 39


State 87

   21 whether: WHETHER '[' condition ']' • THEN ':' statements
   22        | WHETHER '[' condition ']' • THEN ':' statements OTHERWISE ':' statements

    THEN  shift, and go to state 100


State 88

   49 symlist: ID •
   50        | ID • ',' symlist

    ','  shift, and go to state 101

    $default  reduce using rule 49 (symlist)


State 89

   52 ufunction: DEFINE ID '(' symlist • ')' '{' statements '}'

    ')'  shift, and go to state 102


State 90

   48 explist: expression ',' • explist

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 65
    value       go to state 29
    explist     go to state 103
    funcall     go to state 39


State 91

   54 funcall: FUNC '(' explist ')' •

    $default  reduce using rule 54 (funcall)


State 92

   18 init: ASSIGN expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MUL    shift, and go to state 52
    DIV    shift, and go to state 53
    POW    shift, and go to state 54

    $default  reduce using rule 18 (init)


State 93

   53 funcall: ID '(' explist ')' •

    $default  reduce using rule 53 (funcall)


State 94

   24 from: FROM declare TO expression STEP • expression '{' statements '}'

    MINUS   shift, and go to state 10
    ABS     shift, and go to state 11
    NUM     shift, and go to state 12
    BINARY  shift, and go to state 13
    ROMAN   shift, and go to state 14
    STR     shift, and go to state 15
    FUNC    shift, and go to state 16
    ID      shift, and go to state 37
    '('     shift, and go to state 19

    expression  go to state 104
    value       go to state 29
    funcall     go to state 39


State 95

   30 condition: '(' condition ')' •

    $default  reduce using rule 30 (condition)


State 96

   26 condition: condition • AND condition
   26          | condition AND condition •
   27          | condition • OR condition

    AND  shift, and go to state 83
    OR   shift, and go to state 84

    AND       [reduce using rule 26 (condition)]
    OR        [reduce using rule 26 (condition)]
    $default  reduce using rule 26 (condition)


State 97

   26 condition: condition • AND condition
   27          | condition • OR condition
   27          | condition OR condition •

    AND  shift, and go to state 83
    OR   shift, and go to state 84

    AND       [reduce using rule 27 (condition)]
    OR        [reduce using rule 27 (condition)]
    $default  reduce using rule 27 (condition)


State 98

   23 when: WHEN '[' condition ']' UNTIL • statements

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 105
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 99

   25 condition: expression CMP expression •
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MUL    shift, and go to state 52
    DIV    shift, and go to state 53
    POW    shift, and go to state 54

    $default  reduce using rule 25 (condition)


State 100

   21 whether: WHETHER '[' condition ']' THEN • ':' statements
   22        | WHETHER '[' condition ']' THEN • ':' statements OTHERWISE ':' statements

    ':'  shift, and go to state 106


State 101

   50 symlist: ID ',' • symlist

    ID  shift, and go to state 88

    symlist  go to state 107


State 102

   52 ufunction: DEFINE ID '(' symlist ')' • '{' statements '}'

    '{'  shift, and go to state 108


State 103

   48 explist: expression ',' explist •

    $default  reduce using rule 48 (explist)


State 104

   24 from: FROM declare TO expression STEP expression • '{' statements '}'
   32 expression: expression • PLUS expression
   33           | expression • MINUS expression
   34           | expression • MUL expression
   35           | expression • DIV expression
   36           | expression • POW expression

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51
    MUL    shift, and go to state 52
    DIV    shift, and go to state 53
    POW    shift, and go to state 54
    '{'    shift, and go to state 109


State 105

   23 when: WHEN '[' condition ']' UNTIL statements •

    $default  reduce using rule 23 (when)


State 106

   21 whether: WHETHER '[' condition ']' THEN ':' • statements
   22        | WHETHER '[' condition ']' THEN ':' • statements OTHERWISE ':' statements

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 110
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 107

   50 symlist: ID ',' symlist •

    $default  reduce using rule 50 (symlist)


State 108

   52 ufunction: DEFINE ID '(' symlist ')' '{' • statements '}'

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 111
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 109

   24 from: FROM declare TO expression STEP expression '{' • statements '}'

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 112
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 110

   21 whether: WHETHER '[' condition ']' THEN ':' statements •
   22        | WHETHER '[' condition ']' THEN ':' statements • OTHERWISE ':' statements

    OTHERWISE  shift, and go to state 113

    OTHERWISE  [reduce using rule 21 (whether)]
    $default   reduce using rule 21 (whether)


State 111

   52 ufunction: DEFINE ID '(' symlist ')' '{' statements • '}'

    '}'  shift, and go to state 114


State 112

   24 from: FROM declare TO expression STEP expression '{' statements • '}'

    '}'  shift, and go to state 115


State 113

   22 whether: WHETHER '[' condition ']' THEN ':' statements OTHERWISE • ':' statements

    ':'  shift, and go to state 116


State 114

   52 ufunction: DEFINE ID '(' symlist ')' '{' statements '}' •

    $default  reduce using rule 52 (ufunction)


State 115

   24 from: FROM declare TO expression STEP expression '{' statements '}' •

    $default  reduce using rule 24 (from)


State 116

   22 whether: WHETHER '[' condition ']' THEN ':' statements OTHERWISE ':' • statements

    FROM       shift, and go to state 4
    WHEN       shift, and go to state 5
    WHETHER    shift, and go to state 6
    RETURN     shift, and go to state 7
    MINUS      shift, and go to state 10
    ABS        shift, and go to state 11
    NUM        shift, and go to state 12
    BINARY     shift, and go to state 13
    ROMAN      shift, and go to state 14
    STR        shift, and go to state 15
    FUNC       shift, and go to state 16
    DATA_TYPE  shift, and go to state 17
    ID         shift, and go to state 18
    '('        shift, and go to state 19

    statements  go to state 117
    statement   go to state 21
    flow        go to state 22
    declare     go to state 23
    assignment  go to state 24
    whether     go to state 25
    when        go to state 26
    from        go to state 27
    expression  go to state 28
    value       go to state 29
    return      go to state 30
    funcall     go to state 32


State 117

   22 whether: WHETHER '[' condition ']' THEN ':' statements OTHERWISE ':' statements •

    $default  reduce using rule 22 (whether)

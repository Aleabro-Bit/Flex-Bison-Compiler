Terminals unused in grammar

    BOOLEAN
    DOUBLE
    INT
    LIST
    RETURN
    POW
    NUMBER
    BINARY
    ROMAN
    STR
    KEYWORD
    DATA_TYPE
    SPECIAL_CHAR


State 13 conflicts: 1 shift/reduce
State 20 conflicts: 1 shift/reduce
State 40 conflicts: 10 shift/reduce
State 42 conflicts: 10 shift/reduce
State 56 conflicts: 1 shift/reduce
State 59 conflicts: 1 shift/reduce
State 67 conflicts: 10 shift/reduce
State 68 conflicts: 10 shift/reduce


Grammar

    0 $accept: START $end

    1 START: ε
    2      | START statement EOL
    3      | START DEFINE ID '(' symlist ')' ASSIGN list EOL
    4      | START error EOL

    5 statements: statement
    6           | statements statement

    7 statement: whether
    8          | when
    9          | from
   10          | shift
   11          | expression

   12 list: ε
   13     | statement ';' list
   14     | statement

   15 whether: WHETHER condition THEN list
   16        | WHETHER condition THEN list OTHERWISE list

   17 when: WHEN condition UNTIL list

   18 from: FROM expression TO expression ';' STEP expression '%' statements '%'

   19 shift: SHIFT '(' expression ')' '%' EVENT '(' condition ')' ASSIGN expression '%'

   20 condition: expression CMP expression
   21          | expression

   22 expression: expression PLUS expression
   23           | expression MINUS expression
   24           | expression MUL expression
   25           | expression DIV expression
   26           | ABS expression ABS
   27           | MINUS expression
   28           | '(' expression ')'
   29           | NUM
   30           | ID
   31           | ID ASSIGN expression
   32           | FUNC '(' explist ')'
   33           | ID '(' explist ')'

   34 explist: expression
   35        | expression ',' explist

   36 symlist: ID
   37        | ID ',' symlist


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 18 19
    '(' (40) 3 19 28 32 33
    ')' (41) 3 19 28 32 33
    ',' (44) 35 37
    ';' (59) 13 18
    error (256) 4
    BOOLEAN (258)
    DOUBLE (259)
    INT (260)
    LIST (261)
    STEP (262) 18
    TO (263) 18
    FROM (264) 18
    WHEN (265) 17
    OTHERWISE (266) 16
    WHETHER (267) 15 16
    RETURN (268)
    DEFINE (269) 3
    UNTIL (270) 17
    SHIFT (271) 19
    EVENT (272) 19
    EOL (273) 2 3 4
    THEN (274) 15 16
    PLUS <op> (275) 22
    MINUS <op> (276) 23 27
    MUL <op> (277) 24
    DIV <op> (278) 25
    POW <op> (279)
    ASSIGN <op> (280) 3 19 31
    ABS <op> (281) 26
    NUMBER <num> (282)
    NUM <num> (283) 29
    BINARY <num> (284)
    ROMAN <num> (285)
    STR <st> (286)
    KEYWORD <st> (287)
    DATA_TYPE <st> (288)
    SPECIAL_CHAR <st> (289)
    FUNC <fn> (290) 32
    ID <s> (291) 3 30 31 33 36 37
    CMP <fn> (292) 20
    UMINUS (293)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    START (45)
        on left: 1 2 3 4
        on right: 0 2 3 4
    statements <a> (46)
        on left: 5 6
        on right: 6 18
    statement <a> (47)
        on left: 7 8 9 10 11
        on right: 2 5 6 13 14
    list <a> (48)
        on left: 12 13 14
        on right: 3 13 15 16 17
    whether <a> (49)
        on left: 15 16
        on right: 7
    when <a> (50)
        on left: 17
        on right: 8
    from <a> (51)
        on left: 18
        on right: 9
    shift <a> (52)
        on left: 19
        on right: 10
    condition <a> (53)
        on left: 20 21
        on right: 15 16 17 19
    expression <a> (54)
        on left: 22 23 24 25 26 27 28 29 30 31 32 33
        on right: 11 18 19 20 21 22 23 24 25 26 27 28 31 34 35
    explist <a> (55)
        on left: 34 35
        on right: 32 33 35
    symlist <sl> (56)
        on left: 36 37
        on right: 3 37


State 0

    0 $accept: • START $end

    $default  reduce using rule 1 (START)

    START  go to state 1


State 1

    0 $accept: START • $end
    2 START: START • statement EOL
    3      | START • DEFINE ID '(' symlist ')' ASSIGN list EOL
    4      | START • error EOL

    $end     shift, and go to state 2
    error    shift, and go to state 3
    FROM     shift, and go to state 4
    WHEN     shift, and go to state 5
    WHETHER  shift, and go to state 6
    DEFINE   shift, and go to state 7
    SHIFT    shift, and go to state 8
    MINUS    shift, and go to state 9
    ABS      shift, and go to state 10
    NUM      shift, and go to state 11
    FUNC     shift, and go to state 12
    ID       shift, and go to state 13
    '('      shift, and go to state 14

    statement   go to state 15
    whether     go to state 16
    when        go to state 17
    from        go to state 18
    shift       go to state 19
    expression  go to state 20


State 2

    0 $accept: START $end •

    $default  accept


State 3

    4 START: START error • EOL

    EOL  shift, and go to state 21


State 4

   18 from: FROM • expression TO expression ';' STEP expression '%' statements '%'

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 22


State 5

   17 when: WHEN • condition UNTIL list

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    condition   go to state 23
    expression  go to state 24


State 6

   15 whether: WHETHER • condition THEN list
   16        | WHETHER • condition THEN list OTHERWISE list

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    condition   go to state 25
    expression  go to state 24


State 7

    3 START: START DEFINE • ID '(' symlist ')' ASSIGN list EOL

    ID  shift, and go to state 26


State 8

   19 shift: SHIFT • '(' expression ')' '%' EVENT '(' condition ')' ASSIGN expression '%'

    '('  shift, and go to state 27


State 9

   27 expression: MINUS • expression

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 28


State 10

   26 expression: ABS • expression ABS

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 29


State 11

   29 expression: NUM •

    $default  reduce using rule 29 (expression)


State 12

   32 expression: FUNC • '(' explist ')'

    '('  shift, and go to state 30


State 13

   30 expression: ID •
   31           | ID • ASSIGN expression
   33           | ID • '(' explist ')'

    ASSIGN  shift, and go to state 31
    '('     shift, and go to state 32

    '('       [reduce using rule 30 (expression)]
    $default  reduce using rule 30 (expression)


State 14

   28 expression: '(' • expression ')'

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 33


State 15

    2 START: START statement • EOL

    EOL  shift, and go to state 34


State 16

    7 statement: whether •

    $default  reduce using rule 7 (statement)


State 17

    8 statement: when •

    $default  reduce using rule 8 (statement)


State 18

    9 statement: from •

    $default  reduce using rule 9 (statement)


State 19

   10 statement: shift •

    $default  reduce using rule 10 (statement)


State 20

   11 statement: expression •
   22 expression: expression • PLUS expression
   23           | expression • MINUS expression
   24           | expression • MUL expression
   25           | expression • DIV expression

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38

    MINUS     [reduce using rule 11 (statement)]
    $default  reduce using rule 11 (statement)


State 21

    4 START: START error EOL •

    $default  reduce using rule 4 (START)


State 22

   18 from: FROM expression • TO expression ';' STEP expression '%' statements '%'
   22 expression: expression • PLUS expression
   23           | expression • MINUS expression
   24           | expression • MUL expression
   25           | expression • DIV expression

    TO     shift, and go to state 39
    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38


State 23

   17 when: WHEN condition • UNTIL list

    UNTIL  shift, and go to state 40


State 24

   20 condition: expression • CMP expression
   21          | expression •
   22 expression: expression • PLUS expression
   23           | expression • MINUS expression
   24           | expression • MUL expression
   25           | expression • DIV expression

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38
    CMP    shift, and go to state 41

    $default  reduce using rule 21 (condition)


State 25

   15 whether: WHETHER condition • THEN list
   16        | WHETHER condition • THEN list OTHERWISE list

    THEN  shift, and go to state 42


State 26

    3 START: START DEFINE ID • '(' symlist ')' ASSIGN list EOL

    '('  shift, and go to state 43


State 27

   19 shift: SHIFT '(' • expression ')' '%' EVENT '(' condition ')' ASSIGN expression '%'

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 44


State 28

   22 expression: expression • PLUS expression
   23           | expression • MINUS expression
   24           | expression • MUL expression
   25           | expression • DIV expression
   27           | MINUS expression •

    $default  reduce using rule 27 (expression)


State 29

   22 expression: expression • PLUS expression
   23           | expression • MINUS expression
   24           | expression • MUL expression
   25           | expression • DIV expression
   26           | ABS expression • ABS

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38
    ABS    shift, and go to state 45


State 30

   32 expression: FUNC '(' • explist ')'

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 46
    explist     go to state 47


State 31

   31 expression: ID ASSIGN • expression

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 48


State 32

   33 expression: ID '(' • explist ')'

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 46
    explist     go to state 49


State 33

   22 expression: expression • PLUS expression
   23           | expression • MINUS expression
   24           | expression • MUL expression
   25           | expression • DIV expression
   28           | '(' expression • ')'

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38
    ')'    shift, and go to state 50


State 34

    2 START: START statement EOL •

    $default  reduce using rule 2 (START)


State 35

   22 expression: expression PLUS • expression

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 51


State 36

   23 expression: expression MINUS • expression

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 52


State 37

   24 expression: expression MUL • expression

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 53


State 38

   25 expression: expression DIV • expression

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 54


State 39

   18 from: FROM expression TO • expression ';' STEP expression '%' statements '%'

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 55


State 40

   17 when: WHEN condition UNTIL • list

    FROM     shift, and go to state 4
    WHEN     shift, and go to state 5
    WHETHER  shift, and go to state 6
    SHIFT    shift, and go to state 8
    MINUS    shift, and go to state 9
    ABS      shift, and go to state 10
    NUM      shift, and go to state 11
    FUNC     shift, and go to state 12
    ID       shift, and go to state 13
    '('      shift, and go to state 14

    FROM      [reduce using rule 12 (list)]
    WHEN      [reduce using rule 12 (list)]
    WHETHER   [reduce using rule 12 (list)]
    SHIFT     [reduce using rule 12 (list)]
    MINUS     [reduce using rule 12 (list)]
    ABS       [reduce using rule 12 (list)]
    NUM       [reduce using rule 12 (list)]
    FUNC      [reduce using rule 12 (list)]
    ID        [reduce using rule 12 (list)]
    '('       [reduce using rule 12 (list)]
    $default  reduce using rule 12 (list)

    statement   go to state 56
    list        go to state 57
    whether     go to state 16
    when        go to state 17
    from        go to state 18
    shift       go to state 19
    expression  go to state 20


State 41

   20 condition: expression CMP • expression

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 58


State 42

   15 whether: WHETHER condition THEN • list
   16        | WHETHER condition THEN • list OTHERWISE list

    FROM     shift, and go to state 4
    WHEN     shift, and go to state 5
    WHETHER  shift, and go to state 6
    SHIFT    shift, and go to state 8
    MINUS    shift, and go to state 9
    ABS      shift, and go to state 10
    NUM      shift, and go to state 11
    FUNC     shift, and go to state 12
    ID       shift, and go to state 13
    '('      shift, and go to state 14

    FROM      [reduce using rule 12 (list)]
    WHEN      [reduce using rule 12 (list)]
    WHETHER   [reduce using rule 12 (list)]
    SHIFT     [reduce using rule 12 (list)]
    MINUS     [reduce using rule 12 (list)]
    ABS       [reduce using rule 12 (list)]
    NUM       [reduce using rule 12 (list)]
    FUNC      [reduce using rule 12 (list)]
    ID        [reduce using rule 12 (list)]
    '('       [reduce using rule 12 (list)]
    $default  reduce using rule 12 (list)

    statement   go to state 56
    list        go to state 59
    whether     go to state 16
    when        go to state 17
    from        go to state 18
    shift       go to state 19
    expression  go to state 20


State 43

    3 START: START DEFINE ID '(' • symlist ')' ASSIGN list EOL

    ID  shift, and go to state 60

    symlist  go to state 61


State 44

   19 shift: SHIFT '(' expression • ')' '%' EVENT '(' condition ')' ASSIGN expression '%'
   22 expression: expression • PLUS expression
   23           | expression • MINUS expression
   24           | expression • MUL expression
   25           | expression • DIV expression

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38
    ')'    shift, and go to state 62


State 45

   26 expression: ABS expression ABS •

    $default  reduce using rule 26 (expression)


State 46

   22 expression: expression • PLUS expression
   23           | expression • MINUS expression
   24           | expression • MUL expression
   25           | expression • DIV expression
   34 explist: expression •
   35        | expression • ',' explist

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38
    ','    shift, and go to state 63

    $default  reduce using rule 34 (explist)


State 47

   32 expression: FUNC '(' explist • ')'

    ')'  shift, and go to state 64


State 48

   22 expression: expression • PLUS expression
   23           | expression • MINUS expression
   24           | expression • MUL expression
   25           | expression • DIV expression
   31           | ID ASSIGN expression •

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38

    $default  reduce using rule 31 (expression)


State 49

   33 expression: ID '(' explist • ')'

    ')'  shift, and go to state 65


State 50

   28 expression: '(' expression ')' •

    $default  reduce using rule 28 (expression)


State 51

   22 expression: expression • PLUS expression
   22           | expression PLUS expression •
   23           | expression • MINUS expression
   24           | expression • MUL expression
   25           | expression • DIV expression

    MUL  shift, and go to state 37
    DIV  shift, and go to state 38

    $default  reduce using rule 22 (expression)


State 52

   22 expression: expression • PLUS expression
   23           | expression • MINUS expression
   23           | expression MINUS expression •
   24           | expression • MUL expression
   25           | expression • DIV expression

    MUL  shift, and go to state 37
    DIV  shift, and go to state 38

    $default  reduce using rule 23 (expression)


State 53

   22 expression: expression • PLUS expression
   23           | expression • MINUS expression
   24           | expression • MUL expression
   24           | expression MUL expression •
   25           | expression • DIV expression

    $default  reduce using rule 24 (expression)


State 54

   22 expression: expression • PLUS expression
   23           | expression • MINUS expression
   24           | expression • MUL expression
   25           | expression • DIV expression
   25           | expression DIV expression •

    $default  reduce using rule 25 (expression)


State 55

   18 from: FROM expression TO expression • ';' STEP expression '%' statements '%'
   22 expression: expression • PLUS expression
   23           | expression • MINUS expression
   24           | expression • MUL expression
   25           | expression • DIV expression

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38
    ';'    shift, and go to state 66


State 56

   13 list: statement • ';' list
   14     | statement •

    ';'  shift, and go to state 67

    ';'       [reduce using rule 14 (list)]
    $default  reduce using rule 14 (list)


State 57

   17 when: WHEN condition UNTIL list •

    $default  reduce using rule 17 (when)


State 58

   20 condition: expression CMP expression •
   22 expression: expression • PLUS expression
   23           | expression • MINUS expression
   24           | expression • MUL expression
   25           | expression • DIV expression

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38

    $default  reduce using rule 20 (condition)


State 59

   15 whether: WHETHER condition THEN list •
   16        | WHETHER condition THEN list • OTHERWISE list

    OTHERWISE  shift, and go to state 68

    OTHERWISE  [reduce using rule 15 (whether)]
    $default   reduce using rule 15 (whether)


State 60

   36 symlist: ID •
   37        | ID • ',' symlist

    ','  shift, and go to state 69

    $default  reduce using rule 36 (symlist)


State 61

    3 START: START DEFINE ID '(' symlist • ')' ASSIGN list EOL

    ')'  shift, and go to state 70


State 62

   19 shift: SHIFT '(' expression ')' • '%' EVENT '(' condition ')' ASSIGN expression '%'

    '%'  shift, and go to state 71


State 63

   35 explist: expression ',' • explist

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 46
    explist     go to state 72


State 64

   32 expression: FUNC '(' explist ')' •

    $default  reduce using rule 32 (expression)


State 65

   33 expression: ID '(' explist ')' •

    $default  reduce using rule 33 (expression)


State 66

   18 from: FROM expression TO expression ';' • STEP expression '%' statements '%'

    STEP  shift, and go to state 73


State 67

   13 list: statement ';' • list

    FROM     shift, and go to state 4
    WHEN     shift, and go to state 5
    WHETHER  shift, and go to state 6
    SHIFT    shift, and go to state 8
    MINUS    shift, and go to state 9
    ABS      shift, and go to state 10
    NUM      shift, and go to state 11
    FUNC     shift, and go to state 12
    ID       shift, and go to state 13
    '('      shift, and go to state 14

    FROM      [reduce using rule 12 (list)]
    WHEN      [reduce using rule 12 (list)]
    WHETHER   [reduce using rule 12 (list)]
    SHIFT     [reduce using rule 12 (list)]
    MINUS     [reduce using rule 12 (list)]
    ABS       [reduce using rule 12 (list)]
    NUM       [reduce using rule 12 (list)]
    FUNC      [reduce using rule 12 (list)]
    ID        [reduce using rule 12 (list)]
    '('       [reduce using rule 12 (list)]
    $default  reduce using rule 12 (list)

    statement   go to state 56
    list        go to state 74
    whether     go to state 16
    when        go to state 17
    from        go to state 18
    shift       go to state 19
    expression  go to state 20


State 68

   16 whether: WHETHER condition THEN list OTHERWISE • list

    FROM     shift, and go to state 4
    WHEN     shift, and go to state 5
    WHETHER  shift, and go to state 6
    SHIFT    shift, and go to state 8
    MINUS    shift, and go to state 9
    ABS      shift, and go to state 10
    NUM      shift, and go to state 11
    FUNC     shift, and go to state 12
    ID       shift, and go to state 13
    '('      shift, and go to state 14

    FROM      [reduce using rule 12 (list)]
    WHEN      [reduce using rule 12 (list)]
    WHETHER   [reduce using rule 12 (list)]
    SHIFT     [reduce using rule 12 (list)]
    MINUS     [reduce using rule 12 (list)]
    ABS       [reduce using rule 12 (list)]
    NUM       [reduce using rule 12 (list)]
    FUNC      [reduce using rule 12 (list)]
    ID        [reduce using rule 12 (list)]
    '('       [reduce using rule 12 (list)]
    $default  reduce using rule 12 (list)

    statement   go to state 56
    list        go to state 75
    whether     go to state 16
    when        go to state 17
    from        go to state 18
    shift       go to state 19
    expression  go to state 20


State 69

   37 symlist: ID ',' • symlist

    ID  shift, and go to state 60

    symlist  go to state 76


State 70

    3 START: START DEFINE ID '(' symlist ')' • ASSIGN list EOL

    ASSIGN  shift, and go to state 77


State 71

   19 shift: SHIFT '(' expression ')' '%' • EVENT '(' condition ')' ASSIGN expression '%'

    EVENT  shift, and go to state 78


State 72

   35 explist: expression ',' explist •

    $default  reduce using rule 35 (explist)


State 73

   18 from: FROM expression TO expression ';' STEP • expression '%' statements '%'

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 79


State 74

   13 list: statement ';' list •

    $default  reduce using rule 13 (list)


State 75

   16 whether: WHETHER condition THEN list OTHERWISE list •

    $default  reduce using rule 16 (whether)


State 76

   37 symlist: ID ',' symlist •

    $default  reduce using rule 37 (symlist)


State 77

    3 START: START DEFINE ID '(' symlist ')' ASSIGN • list EOL

    FROM     shift, and go to state 4
    WHEN     shift, and go to state 5
    WHETHER  shift, and go to state 6
    SHIFT    shift, and go to state 8
    MINUS    shift, and go to state 9
    ABS      shift, and go to state 10
    NUM      shift, and go to state 11
    FUNC     shift, and go to state 12
    ID       shift, and go to state 13
    '('      shift, and go to state 14

    $default  reduce using rule 12 (list)

    statement   go to state 56
    list        go to state 80
    whether     go to state 16
    when        go to state 17
    from        go to state 18
    shift       go to state 19
    expression  go to state 20


State 78

   19 shift: SHIFT '(' expression ')' '%' EVENT • '(' condition ')' ASSIGN expression '%'

    '('  shift, and go to state 81


State 79

   18 from: FROM expression TO expression ';' STEP expression • '%' statements '%'
   22 expression: expression • PLUS expression
   23           | expression • MINUS expression
   24           | expression • MUL expression
   25           | expression • DIV expression

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38
    '%'    shift, and go to state 82


State 80

    3 START: START DEFINE ID '(' symlist ')' ASSIGN list • EOL

    EOL  shift, and go to state 83


State 81

   19 shift: SHIFT '(' expression ')' '%' EVENT '(' • condition ')' ASSIGN expression '%'

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    condition   go to state 84
    expression  go to state 24


State 82

   18 from: FROM expression TO expression ';' STEP expression '%' • statements '%'

    FROM     shift, and go to state 4
    WHEN     shift, and go to state 5
    WHETHER  shift, and go to state 6
    SHIFT    shift, and go to state 8
    MINUS    shift, and go to state 9
    ABS      shift, and go to state 10
    NUM      shift, and go to state 11
    FUNC     shift, and go to state 12
    ID       shift, and go to state 13
    '('      shift, and go to state 14

    statements  go to state 85
    statement   go to state 86
    whether     go to state 16
    when        go to state 17
    from        go to state 18
    shift       go to state 19
    expression  go to state 20


State 83

    3 START: START DEFINE ID '(' symlist ')' ASSIGN list EOL •

    $default  reduce using rule 3 (START)


State 84

   19 shift: SHIFT '(' expression ')' '%' EVENT '(' condition • ')' ASSIGN expression '%'

    ')'  shift, and go to state 87


State 85

    6 statements: statements • statement
   18 from: FROM expression TO expression ';' STEP expression '%' statements • '%'

    FROM     shift, and go to state 4
    WHEN     shift, and go to state 5
    WHETHER  shift, and go to state 6
    SHIFT    shift, and go to state 8
    MINUS    shift, and go to state 9
    ABS      shift, and go to state 10
    NUM      shift, and go to state 11
    FUNC     shift, and go to state 12
    ID       shift, and go to state 13
    '('      shift, and go to state 14
    '%'      shift, and go to state 88

    statement   go to state 89
    whether     go to state 16
    when        go to state 17
    from        go to state 18
    shift       go to state 19
    expression  go to state 20


State 86

    5 statements: statement •

    $default  reduce using rule 5 (statements)


State 87

   19 shift: SHIFT '(' expression ')' '%' EVENT '(' condition ')' • ASSIGN expression '%'

    ASSIGN  shift, and go to state 90


State 88

   18 from: FROM expression TO expression ';' STEP expression '%' statements '%' •

    $default  reduce using rule 18 (from)


State 89

    6 statements: statements statement •

    $default  reduce using rule 6 (statements)


State 90

   19 shift: SHIFT '(' expression ')' '%' EVENT '(' condition ')' ASSIGN • expression '%'

    MINUS  shift, and go to state 9
    ABS    shift, and go to state 10
    NUM    shift, and go to state 11
    FUNC   shift, and go to state 12
    ID     shift, and go to state 13
    '('    shift, and go to state 14

    expression  go to state 91


State 91

   19 shift: SHIFT '(' expression ')' '%' EVENT '(' condition ')' ASSIGN expression • '%'
   22 expression: expression • PLUS expression
   23           | expression • MINUS expression
   24           | expression • MUL expression
   25           | expression • DIV expression

    PLUS   shift, and go to state 35
    MINUS  shift, and go to state 36
    MUL    shift, and go to state 37
    DIV    shift, and go to state 38
    '%'    shift, and go to state 92


State 92

   19 shift: SHIFT '(' expression ')' '%' EVENT '(' condition ')' ASSIGN expression '%' •

    $default  reduce using rule 19 (shift)
